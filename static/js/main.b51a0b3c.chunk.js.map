{"version":3,"sources":["app/userContext.tsx","app/utils.ts","containers/public/Login/PasswordComponent.tsx","containers/public/Login/Register.tsx","containers/public/Login/utils/utils.ts","containers/public/Login/Login.tsx","containers/public/Login/ForgottenPassword.tsx","containers/public/Login/ForgottenPasswordReset.tsx","containers/public/Login/VerifyUser.tsx","containers/public/Login/utils/GithubCallback.tsx","logo.svg","containers/public/Home/Home.tsx","components/Header/AdminHeader.tsx","components/Header/PublicHeader.tsx","components/Header/UserHeader.tsx","components/Header/Header.tsx","containers/user/UserDashboard/UserDashboard.tsx","components/ProtectRoute/ProtectRoute.tsx","components/List/row-item.tsx","components/List/row.tsx","components/common/Loading.tsx","components/common/DeleteModal.tsx","components/common/Unauthorized.tsx","components/List/table.tsx","components/List/filter-item.tsx","components/List/filtered-list.tsx","components/Editor/Edit.tsx","components/List/connect-base.tsx","containers/admin/Users/UsersList.tsx","containers/admin/UserRoles/UserRolesList.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","app/refreshToken.ts","app/apolloClient.ts","index.tsx"],"names":["userFromStorage","token","localStorage","getItem","email","id","roles","split","UserStateContext","React","createContext","UserDispatchContext","USER_LOGIN","USER_LOGOUT","userReducer","state","action","type","userToken","setItem","refreshToken","user","Boolean","verified","toString","map","r","name","removeItem","Error","UserProvider","children","useReducer","dispatch","Provider","value","useUserState","context","useContext","undefined","useUserDispatch","isEmailValid","RegExp","test","passwordStrong","password","length","valid","strong","variant","capital","lower","number","process","percentage","PasswordComponent","onPasswordChange","strongPassword","Form","Group","controlId","Label","Control","placeholder","onChange","isInvalid","Text","ProgressBar","now","label","REGISTER_MUTATION","gql","Register","useState","setEmail","pass","setPass","copy","setCopy","history","useHistory","useMutation","errorPolicy","register","loading","data","error","invalidEmail","setInvalidEmail","emailProbablyTaken","setEmailProbablyTaken","setStrong","invalidCopy","setInvalidCopy","onRegister","a","variables","register_v1","push","console","log","data-bgimage","className","data-scroll-speed","method","Alert","to","event","target","c","Button","onClick","disabled","LOGIN_QL","Login","invalidPass","setInvalidPass","query","URLSearchParams","location","search","path","get","role","login","onLogin","login_v1","replace","onBackClick","goBack","href","FORGOTTEN_PASSWORD_REQUEST_MUTATION","ForgottenPassword","emailSent","setEmailSent","doForgottenPassword","onRequestSend","FORGOTTEN_PASSWORD_CHECK_MUTATION","FORGOTTEN_PASSWORD_RESET_MUTATION","ForgotenPasswordReset","match","_","setPassword","doForgottenPasswordCheck","loadingForgottenPasswordCheck","dataForgottenPasswordCheck","doForgottenPasswordReset","useEffect","doCheck","onReset","reset","check","status","isPasswordValid","VERIFY_EMAIL_MUTATION","VerifyUser","verifyToken","setVerified","verify","verifying","verifiedError","doVerifyUser","verifyEmail_v1","setTimeout","previouslyVerified","onVerifyUser","tokenFromFacebookCode","code","axios","GithubCallback","useLocation","codeRaw","setError","showError","errorMessage","response","JSON","parse","message","request","Home","src","logo","alt","rel","UserHeader","onLogout","Dropdown","Toggle","Menu","Item","PublicHeader","Header","userDispatch","indexOf","AdminHeader","UserDashboard","ProtectRoute","ListRowItem","item","field","fieldDesc","names","element","getElementFromField","component","substr","reduce","p","e","ListRow","onDelete","fields","showDelete","toLowerCase","size","Loading","what","DeleteModal","show","onHide","category","deleteObject","deleting","Modal","closeButton","Title","Body","Footer","Unauthorized","where","Table","filter","adminMode","queries","unauthorized","setUnauthorized","setDeleteObject","showDeleteDialog","setShowDeleteDialog","deletingOnDeleteDialog","setDeletingOnDeleteDialog","setLoading","setData","useQuery","ADMIN_LIST_QUERY","USER_LIST_QUERY","onError","onCompleted","d","dataFields","Object","getOwnPropertyNames","userRefetch","refetch","userLoading","DELETE_MUTATION","deleteProject","onHideDidaloDelete","deleteProjectMutation","obj","responsive","f","projectItem","basicOptionsName","contains","not_contains","starts_with","not_starts_with","ends_with","not_ends_with","isEmpty","FilterItem","fieldSelected","setFieldSelected","optionSelected","setOptionSelected","filterText","setFilterText","setFilter","doFilter","useCallback","processFilter","option","text","gc","o","o2","go","InputGroup","DropdownButton","as","Prepend","title","createFilter","AND","addAnd","node","filterDestructNode","n","filterDestruct","fo","params","FilteredList","userId","createDefaultFilter","defaultFilter","user_every","filterDestructed","onFilterChange","getDataFromRaw","rawData","keys","ConnectBase","elementTitle","setTitle","QUERY","iraw","final","checked","ADD","raw","addMutation","REMOVE","removeMutation","updated","updateTitle","id1","id2","onChecked","Check","USER_ROLE_QUERY","ADD_MUTATION","REMOVE_MUTATION","ConnectRole","UsersList","UserRoleList","App","exact","ForgottenPasswordReset","UserRolesList","fetchCount","amount","Promise","resolve","incrementAsync","createAsyncThunk","counterSlice","createSlice","initialState","reducers","increment","decrement","incrementByAmount","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","window","hostname","post","retryLink","RetryLink","attempts","count","operation","delay","Math","random","isRefreshing","pendingRequests","unautheniticatedAction","forward","forward$","fromPromise","then","refreshToken_v1","callback","oldHeaders","getContext","headers","setContext","authorization","catch","finally","flatMap","authLink","httpLink","createHttpLink","uri","erroLink","graphQLErrors","networkError","locations","apolloClient","ApolloClient","link","ApolloLink","from","cache","InMemoryCache","defaultOptions","watchQuery","mutate","ReactDOM","render","StrictMode","client","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qaAqCMA,EAAkB,WAAO,IAAD,EACpBC,EAAQC,aAAaC,QAAQ,cACnC,OAAIF,EAIG,CACHA,QACAG,MAAOF,aAAaC,QAAQ,cAC5BE,GAAIH,aAAaC,QAAQ,WACzBG,MAAK,UAAEJ,aAAaC,QAAQ,qBAAvB,aAAE,EAAoCI,MAAM,MAP1C,IAYTC,EAAmBC,IAAMC,cAA0B,MACnDC,EAAsBF,IAAMC,cAA0B,MAGtDE,EAAa,aACbC,EAAc,cAEdC,EAAc,SAACC,EAAYC,GAC/B,OAAQA,EAAOC,MACb,IANc,YAOZ,OAAOjB,IAET,KAAKY,EAAa,IAAD,EAEf,OA/CiBM,EA8CHF,EAAOE,UA7CvBhB,aAAaiB,QAAQ,aAAcD,EAAUjB,OAC7CC,aAAaiB,QAAQ,oBAAqBD,EAAUE,cACpDlB,aAAaiB,QAAQ,UAAWD,EAAUG,KAAKhB,IAC/CH,aAAaiB,QAAQ,aAAcD,EAAUG,KAAKjB,OAClDF,aAAaiB,QAAQ,gBAAiBG,QAAQJ,EAAUG,KAAKE,UAAUC,YACvEtB,aAAaiB,QAAQ,aAAcD,EAAUG,KAAKf,MAAMmB,KAAI,SAAAC,GAAC,OAAEA,EAAEC,QAAMH,YAyC9D,CACLnB,GAAIW,EAAOE,UAAUG,KAAKhB,GAC1BJ,MAAOe,EAAOE,UAAUjB,MACxBG,MAAOY,EAAOE,UAAUG,KAAKjB,MAC7BE,MAAK,UAAEU,EAAOE,UAAUG,KAAKf,aAAxB,aAAE,EAA6BmB,KAAI,SAACC,GAAD,OAAuBA,EAAEC,QACjEJ,SAAUD,QAAQN,EAAOE,UAAUG,KAAKE,WAG5C,KAAKV,EAEH,OA/CJX,aAAa0B,WAAW,qBACxB1B,aAAa0B,WAAW,cACxB1B,aAAa0B,WAAW,WAExB1B,aAAa0B,WAAW,iBACxB1B,aAAa0B,WAAW,cA0Cb,GAET,QACE,MAAM,IAAIC,MAAJ,iCAAoCb,EAAOC,OA5DjC,IAACC,GAiEvB,SAASY,EAAT,GAAwC,IAAjBC,EAAgB,EAAhBA,SAAgB,EACXtB,IAAMuB,WAAWlB,EAAad,KADnB,mBAC9Be,EAD8B,KACvBkB,EADuB,KAErC,OACE,cAACzB,EAAiB0B,SAAlB,CAA2BC,MAAOpB,EAAlC,SACE,cAACJ,EAAoBuB,SAArB,CAA8BC,MAAOF,EAArC,SACGF,MAMT,SAASK,IACP,IAAMC,EAAU5B,IAAM6B,WAAW9B,GACjC,QAAgB+B,IAAZF,EACF,MAAM,IAAIR,MAAM,oDAElB,OAAOQ,EAGT,SAASG,IACP,IAAMH,EAAU5B,IAAM6B,WAAW3B,GACjC,QAAgB4B,IAAZF,EACF,MAAM,IAAIR,MAAM,uDAElB,OAAOQ,EC1GF,I,YAAMI,EAAe,SAACrC,GAGzB,OAAO,IAAIsC,OAAO,4CAA4CC,KAAKvC,IAgB1DwC,EAAiB,SAACC,GAC3B,IAAMC,EAASD,EAASC,OAExB,GAAGA,EAAS,EACR,MAAO,CACJC,OAAO,EACPC,OAAQ,EACRrB,KAAM,GACNsB,QAAS,UAIhB,GAAGH,GAAU,GACT,MAAO,CACHC,OAAO,EACPC,OAAQ,IACRrB,KAAM,SACNsB,QAAS,WAIjB,IAAMC,EAAU,kBAAkBP,KAAKE,GAAY,EAAM,cAAcF,KAAKE,GAAY,EAAI,EACtFM,EAAQ,kBAAkBR,KAAKE,GAAY,EAAM,cAAcF,KAAKE,GAAY,EAAI,EACpFO,EAAS,kBAAkBT,KAAKE,GAAY,EAAM,cAAcF,KAAKE,GAAY,EAAI,EAGrFV,EAAQe,EAAUC,EAAQC,GAFhB,uBAAuBT,KAAKE,GAAY,EAAM,mBAAmBF,KAAKE,GAAY,EAAI,GAIhGE,EAASD,EAAS,GAAKK,EAAQ,GAAKC,EAAS,IAAMC,EACrDC,EAAcnB,EAAOW,EAAO,EAGhC,OAFGQ,EAAa,KAAIA,EAAa,IAE1B,CACHP,QACAC,OAAqB,GAAbM,EACR3B,KAAMQ,EAAQ,EAAI,SAAYA,EAAQ,EAAI,eAAkBY,EAAQ,OAAS,OAC7EE,QAASK,EAAa,EAAI,UAAaP,EAAQ,UAAY,W,SChCpDQ,EAf+C,SAAC,GAAD,IAAEC,EAAF,EAAEA,iBAAkBX,EAApB,EAAoBA,SAAUY,EAA9B,EAA8BA,eAA9B,OAC1D,eAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACI7C,KAAK,WACL8C,YAAY,WACZC,SAAUR,EACVrB,MAAOU,EACPoB,WAAYR,EAAeV,QAE/B,cAACW,EAAA,EAAKQ,KAAN,uHACA,cAACC,EAAA,EAAD,CAAaC,IAAKX,EAAeT,OAAQqB,MAAOZ,EAAe9B,KAAMsB,QAASQ,EAAeR,cCZ/FqB,EAAoBC,YAAH,+QAsKRC,EAvJmB,WAAO,IAAD,EACZC,mBAAS,IADG,mBAC/BrE,EAD+B,KACxBsE,EADwB,OAEdD,mBAAS,IAFK,mBAE/BE,EAF+B,KAEzBC,EAFyB,OAGdH,mBAAS,IAHK,mBAG/BI,EAH+B,KAGzBC,EAHyB,KAKhCC,EAAUC,cACV/C,EAAWO,IANqB,EAQOyC,sBAAYX,EAAmB,CAC1EY,YAAa,SATuB,mBAQ/BC,EAR+B,YAQnBC,EARmB,EAQnBA,QAASC,EARU,EAQVA,KARU,KAQJC,MAIMb,oBAAS,IAZX,mBAY/Bc,EAZ+B,KAYjBC,EAZiB,OAacf,oBAAS,GAbvB,mBAa/BgB,EAb+B,KAaXC,EAbW,OAcVjB,mBAAS7B,EAAe,KAdd,mBAc/BI,EAd+B,KAcvB2C,EAduB,OAgBAlB,oBAAS,GAhBT,mBAgB/BmB,EAhB+B,KAgBlBC,EAhBkB,KAkBhCC,EAAU,uCAAG,8BAAAC,EAAA,yDACbtD,EAAarC,GADA,yCAERoF,GAAgB,IAFR,UAKbb,IAASE,EALI,uBAMfgB,GAAe,GANA,mDAWQV,EAAS,CAAEa,UAAW,CAAE5F,QAAOuE,UAXvC,gBAWPU,EAXO,EAWPA,KACRpD,EAAS,CACPhB,KAAML,EACNM,UAAWmE,EAAKY,cAElBlB,EAAQmB,KAAK,kBAhBE,kDAkBbC,QAAQC,IAAI,UAAWf,GACvBK,GAAsB,GAnBT,0DAAH,qDAiDhB,OAAQ,qCACN,yBAASrF,GAAG,YAAYgG,eAAa,sCAArC,SACE,qBAAKC,UAAU,gCAAgCC,oBAAkB,IAAjE,SACE,qBAAKD,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMtF,OAAO,YAAYsF,UAAU,MAAMjG,GAAG,iBAAiBmG,OAAO,OAAO7E,KAAK,SAAhF,UACE,sBAAK2E,UAAU,wBAAf,UACE,mDACA,gEAEF,qBAAKA,UAAU,0BAQ3B,yBAASA,UAAU,SAASD,eAAa,mCAAzC,SACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAM3E,KAAK,cAActB,GAAG,eAAeiG,UAAU,cAAcE,OAAO,OAAOxF,OAAO,YAAxF,UAGE,eAAC0C,EAAA,EAAD,WACG6B,GAAiB,cAACkB,EAAA,EAAD,CAAOxD,QAAS,SAAhB,2CACjBwC,GAAuB,eAACgB,EAAA,EAAD,CAAOxD,QAAS,SAAhB,8CAA2D,cAAC,IAAD,CAAMyD,GAAG,sBAAT,gCAA3D,OACvBd,GAAgB,cAACa,EAAA,EAAD,CAAOxD,QAAS,SAAhB,kDACjB,eAACS,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CACE7C,KAAK,QACL8C,YAAY,cACZC,SA3DI,SAAC2C,GACrBjC,EAASiC,EAAMC,OAAOzE,OACtBqD,GAAgB,GAChBE,GAAsB,IAyDNvD,MAAO/B,EACP6D,UAAWsB,IAEb,cAAC7B,EAAA,EAAKQ,KAAN,CAAWoC,UAAU,aAArB,+DAKF,cAAC,EAAD,CAAmBzD,SAAU8B,EAAMnB,iBA9DxB,SAACmD,GACxB,IAAMhC,EAAOgC,EAAMC,OAAOzE,MAE1ByC,EAAQD,GACRa,GAAgB,GAChBG,EAAU/C,EAAe+B,KAyD0DlB,eAAgBT,IAEvF,eAACU,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CACE7C,KAAK,WACL8C,YAAY,kBACZC,SA7DG,SAAC2C,GACpB,IAAME,EAAIF,EAAMC,OAAOzE,MACvB2C,EAAQ+B,GACRrB,GAAgB,GAEZqB,GAAKlC,GACPkB,GAAe,IAwDD1D,MAAO0C,EACPZ,UAAW2B,UAKjB,sBAAKvF,GAAG,SAASiG,UAAU,YAA3B,WACIlB,GAAW,cAAC0B,EAAA,EAAD,CAAQR,UAAU,YAAYrD,QAAQ,UAAU8D,QAAS,kBAAMjB,KAA/D,sBACZV,GAAW,cAAC0B,EAAA,EAAD,CAAQR,UAAU,YAAYrD,QAAQ,UAAU+D,UAAQ,EAAxD,wBAEZ,qBAAKV,UAAU,aAEf,qBAAKA,UAAU,oCCzJlB7D,EAAe,SAACrC,GAGzB,OAAO,IAAIsC,OAAO,4CAA4CC,KAAKvC,ICGjE6G,EAAW1C,YAAH,8RA6IC2C,EA5HgB,WAAO,IAAD,EACPzC,mBAASvE,aAAaC,QAAQ,eAAiB,IADxC,mBAC1BC,EAD0B,KACnBsE,EADmB,OAETD,mBAAS,IAFA,mBAE1BE,EAF0B,KAEpBC,EAFoB,OAIOH,oBAAS,GAJhB,mBAI1Bc,EAJ0B,KAIZC,EAJY,OAKKf,oBAAS,GALd,mBAK1B0C,EAL0B,KAKbC,EALa,KAO3BrC,EAAUC,cACVqC,EAAQ,IAAIC,gBAAgBvC,EAAQwC,SAASC,QAC7CC,EAAOJ,EAAMK,IAAI,QACjBC,EAAON,EAAMK,IAAI,QAEjBzF,EAAWO,IAZgB,EAcSyC,sBAAYgC,EAAU,CAAE/B,YAAa,SAd9C,mBAc1B0C,EAd0B,YAcjBxC,EAdiB,EAcjBA,QAEVyC,GAhB2B,EAcRxC,KAdQ,EAcFC,MAElB,uCAAG,8BAAAS,EAAA,yDACRtD,EAAarC,GADL,yCAEDoF,GAAgB,IAFf,gCAMiBoC,EAAM,CAAE5B,UAAW,CAAE5F,QAAOuE,UAN7C,gBAMDU,EANC,EAMDA,KACPpD,EAAS,CACLhB,KAAML,EACNM,UAAWmE,EAAKyC,WAIpB/C,EAAQgD,QAAQN,GAlBJpE,mBAKJ,kDAeRmC,GAAgB,GAChB4B,GAAe,GACfxC,EAAQ,IAjBA,0DAAH,sDAkCPoD,EAAc,WAChBjD,EAAQkD,UAGZ,OAAQ,qCACJ,yBAAS5H,GAAG,YAAYgG,eAAa,sCAArC,SACI,qBAAKC,UAAU,gCAAgCC,oBAAkB,IAAjE,SACI,qBAAKD,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,uBAAMtF,OAAO,YAAYsF,UAAU,MAAMjG,GAAG,iBAAiBmG,OAAO,OAAO7E,KAAK,SAAhF,UACI,sBAAK2E,UAAU,wBAAf,UACI,4CACA,0DACCqB,GAAQ,eAAClB,EAAA,EAAD,CAAOxD,QAAS,UAAhB,yEAAuF,4BAAI0E,IAA3F,qBAAsH,cAAC,IAAD,CAAMjB,GAAI,IAAKK,QAASiB,EAAxB,qCAC5HL,GAAQF,GAAS,eAAChB,EAAA,EAAD,CAAOxD,QAAS,UAAhB,gFAA8F,cAAC,IAAD,CAAMyD,GAAI,IAAKK,QAASiB,EAAxB,uCAEtH,qBAAK1B,UAAU,0BAQvC,yBAASA,UAAU,SAASD,eAAa,mCAAzC,SACI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,eAAC5C,EAAA,EAAD,CAAM/B,KAAK,cAActB,GAAG,eAAeiG,UAAU,cAArD,WACMa,GAAe,uDAChBA,GAAe,eAACV,EAAA,EAAD,CAAOxD,QAAS,SAAhB,qDAAkE,cAAC,IAAD,CAAMyD,GAAG,sBAAT,qCAAlE,OACfnB,GAAiB,cAACkB,EAAA,EAAD,CAAOxD,QAAS,SAAhB,2CAClB,eAACS,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CAAc7C,KAAK,OAAO8C,YAAY,cAAcC,SA/C1D,SAAC2C,GACnBjC,EAASiC,EAAMC,OAAOzE,OACtBqD,GAAgB,GAChB4B,GAAe,IA4CsFjF,MAAO/B,EAAO6D,UAAWsB,OAI1G,eAAC7B,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAc7C,KAAK,WAAW+C,SA/CjC,SAAC2C,GACtB/B,EAAQ+B,EAAMC,OAAOzE,OACrBqD,GAAgB,GAChB4B,GAAe,IA4CmEjF,MAAOwC,EAAMV,UAAWkD,IAClF,cAACzD,EAAA,EAAKQ,KAAN,CAAWoC,UAAU,aAArB,kEAKJ,sBAAKjG,GAAG,SAASiG,UAAU,YAA3B,WACMlB,GAAW,cAAC0B,EAAA,EAAD,CAAQR,UAAU,YAAYrD,QAAQ,UAAU8D,QAAS,kBAAMc,KAA/D,mBACZzC,GAAW,cAAC0B,EAAA,EAAD,CAAQR,UAAU,YAAYrD,QAAQ,UAAU+D,UAAQ,EAAxD,wBACZ,qBAAKV,UAAU,aAEf,qBAAKA,UAAU,kBAEf,qBAAIA,UAAU,UAAd,UACI,gDACA,6BAAI,mBAAG4B,KAAI,UAAK7E,iGAAL,gBAAP,sBACJ,6BAAI,mBAAG6E,KAAI,UAAK7E,iGAAL,kBAAP,wBACJ,6BAAI,mBAAG6E,KAAI,UAAK7E,iGAAL,gBAAP,2CC7HlC8E,EAAsC5D,YAAH,gKAqH1B6D,EA5G4B,WAAO,IAAD,EACrB3D,mBAAS,IADY,mBACxCrE,EADwC,KACjCsE,EADiC,OAEPD,oBAAS,GAFF,mBAExCc,EAFwC,KAE1BC,EAF0B,OAGbf,oBAAS,GAHI,mBAGxC4D,EAHwC,KAG7BC,EAH6B,QAK/BtD,cACCxC,IAEsGyC,sBAAYkD,EAAqC,CACtKjD,YAAa,UATgC,sCAQrBE,QARqB,EAQYC,KARZ,EAQuCC,MAI9BL,sBAAYkD,EAAqC,CACvGjD,YAAa,UAbgC,mBAYxCqD,EAZwC,YAYjBnD,EAZiB,EAYjBA,QAASC,EAZQ,EAYRA,KAKjCmD,GAjByC,EAYFlD,MAK1B,uCAAG,4BAAAS,EAAA,yDACpBuC,GAAa,IACVlI,IAASqC,EAAarC,GAFL,wBAGlBoF,GAAgB,GAHE,kBAKO+C,EAAoB,CAAEvC,UAAW,CAAE5F,WAL1C,kBAKRiF,KACRiD,GAAa,GANG,kDAQhBnC,QAAQC,IAAI,UAAWf,GACvBG,GAAgB,GATA,gCAYlBA,GAAgB,GAZE,0DAAH,sDAuBnB,OAAG6C,EAEC,mCACA,eAAC5B,EAAA,EAAD,CAAOxD,QAAS,UAAhB,iDAAgE7C,EAAhE,8DAKI,qCACN,yBAASC,GAAG,YAAYgG,eAAa,sCAArC,SACE,qBAAKC,UAAU,gCAAgCC,oBAAkB,IAAjE,SACE,qBAAKD,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMtF,OAAO,YAAYsF,UAAU,MAAMjG,GAAG,iBAAiBmG,OAAO,OAAO7E,KAAK,SAAhF,UACE,sBAAK2E,UAAU,wBAAf,UACE,oDACA,4DAEF,qBAAKA,UAAU,0BAQ3B,yBAASA,UAAU,SAASD,eAAa,mCAAzC,SACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAM3E,KAAK,cAActB,GAAG,eAAeiG,UAAU,cAAcE,OAAO,OAAOxF,OAAO,YAAxF,UAGE,cAAC0C,EAAA,EAAD,UACA,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CACE7C,KAAK,QACL8C,YAAY,cACZC,SA7CI,SAAC2C,GACrBjC,EAASiC,EAAMC,OAAOzE,OACtBqD,GAAgB,IA4CArD,MAAO/B,EACP6D,UAAWsB,IAEb,cAAC7B,EAAA,EAAKQ,KAAN,CAAWoC,UAAU,aAArB,iEAQJ,sBAAKjG,GAAG,SAASiG,UAAU,YAA3B,WACIlB,GAAW,cAAC0B,EAAA,EAAD,CAAQR,UAAU,YAAYrD,QAAQ,UAAU8D,QAAS,kBAAMyB,KAA/D,gCACZpD,GAAW,cAAC0B,EAAA,EAAD,CAAQR,UAAU,YAAYrD,QAAQ,UAAU+D,UAAQ,EAAxD,wBAEZ,qBAAKV,UAAU,+B,iBCvGzBmC,EAAoClE,YAAH,mKAQjCmE,EAAoCnE,YAAH,0TAqKxBoE,EAtJqC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAC9C3I,EAAQ4I,IAAEnB,IAAIkB,EAAO,gBADoC,EAE/BnE,mBAAS,IAFsB,mBAExD5B,EAFwD,KAE9CiG,EAF8C,OAGvCrE,mBAAS,IAH8B,mBAGxDI,EAHwD,KAGlDC,EAHkD,KAKzDC,EAAUC,cACV/C,EAAWO,IAN8C,EAQsFyC,sBAAYwD,EAAmC,CAClMvD,YAAa,SATgD,mBAQxD6D,EARwD,YAQnBC,EARmB,EAQ5B5D,QAA8C6D,EARlB,EAQY5D,KARZ,KAQ8CC,MAIhDL,sBAAYyD,EAAmC,CAC1GxD,YAAa,UAbgD,mBAYxDgE,EAZwD,YAY5B9D,EAZ4B,EAY5BA,QAASC,EAZmB,EAYnBA,KAZmB,KAYbC,MAKZb,oBAAS,IAjBgB,mBAiB3C2C,GAjB2C,aAkBnC3C,mBAAS7B,EAAe,KAlBW,mBAkBxDI,EAlBwD,KAkBhD2C,EAlBgD,OAmB7BlB,oBAAS,GAnBoB,gCAqBzBA,oBAAS,IArBgB,mBAqBxDmB,EArBwD,KAqB3CC,GArB2C,KAuB/DsD,qBAAU,YACK,uCAAG,sBAAApD,EAAA,+EAENgD,EAAyB,CAAE/C,UAAW,CAAC/F,WAFjC,qJAAH,qDAUbmJ,KAEC,CAACnJ,EAAO8I,IAEX,IAAMM,GAAO,uCAAG,8BAAAtD,EAAA,yDACV/C,EAAOD,MADG,oDAKVF,IAAagC,EALH,uBAMZgB,IAAe,GANH,mDAWWqD,EAAyB,CAAElD,UAAW,CAAE/F,QAAO4C,cAX1D,gBAWJwC,EAXI,EAWJA,KACRpD,EAAS,CACPhB,KAAML,EACNM,UAAWmE,EAAKiE,QAElBvE,EAAQgD,QAAQ,kBAhBJ,kDAkBV5B,QAAQC,IAAI,UAAWf,GAlBb,0DAAH,qDA2Cb,OAAG2D,EACO,cAACvC,EAAA,EAAD,CAAOxD,QAAS,UAAhB,4BACEgG,GAA8BA,EAA2BM,OAAqD,UAA5CN,EAA2BM,MAAMC,OACrG,qCACN,yBAASnJ,GAAG,YAAYgG,eAAa,sCAArC,SACE,qBAAKC,UAAU,gCAAgCC,oBAAkB,IAAjE,SACE,qBAAKD,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMtF,OAAO,YAAYsF,UAAU,MAAMjG,GAAG,iBAAiBmG,OAAO,OAAO7E,KAAK,SAAhF,UACE,sBAAK2E,UAAU,wBAAf,UACE,qDACA,yDAEF,qBAAKA,UAAU,0BAQ3B,yBAASA,UAAU,SAASD,eAAa,mCAAzC,SACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAM3E,KAAK,cAActB,GAAG,eAAeiG,UAAU,cAAcE,OAAO,OAAOxF,OAAO,YAAxF,UAGE,eAAC0C,EAAA,EAAD,WAECkC,GAAgB,cAACa,EAAA,EAAD,CAAOxD,QAAS,SAAhB,kDACjB,cAAC,EAAD,CAAmBJ,SAAUA,EAAUW,iBAnD5B,SAACmD,GACxB,IAAMhC,EAAOgC,EAAMC,OAAOzE,MAE1B2G,EAAYnE,GACZ,IAAM5B,EN3FqB,SAACF,GAI5B,MAD0B,yDACDF,KAAKE,GMuFhB4G,CAAgB9E,GAC9ByC,GAAgBrE,GAChB4C,EAAU/C,EAAe+B,KA6C8DlB,eAAgBT,IAEzF,eAACU,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CACE7C,KAAK,WACL8C,YAAY,kBACZC,SAjDC,SAAC2C,GACpB,IAAME,EAAIF,EAAMC,OAAOzE,MACvB2C,EAAQ+B,GACRO,GAAe,GAEXP,GAAKhE,GACPgD,IAAe,IA4CC1D,MAAO0C,EACPZ,UAAW2B,UAKjB,sBAAKvF,GAAG,SAASiG,UAAU,YAA3B,WACIlB,GAAW,cAAC0B,EAAA,EAAD,CAAQR,UAAU,YAAYrD,QAAQ,UAAU8D,QAAS,kBAAMsC,MAAWrC,UAAWhE,EAAOD,MAA5F,4BACZqC,GAAW,cAAC0B,EAAA,EAAD,CAAQR,UAAU,YAAYrD,QAAQ,UAAU+D,UAAQ,EAAxD,wBAEZ,qBAAKV,UAAU,8BAarB,eAACG,EAAA,EAAD,CAAOxD,QAAS,SAAhB,iBAA8B,4BAAIhD,IAAlC,oCCzKNyJ,EAAwBnF,YAAH,sQAgFZoF,EAjE0B,SAAC,GAAa,IAAZf,EAAW,EAAXA,MACnCgB,EAAcf,MAAMD,EAAO,sBADmB,EAEpBnE,oBAAS,GAFW,mBAE7ClD,EAF6C,KAEnCsI,EAFmC,KAI9C9E,EAAUC,cACV/C,EAAWO,IALmC,EAOiByC,sBAAYyE,EAAuB,CACtGxE,YAAa,SARqC,mBAO7C4E,EAP6C,YAO1BC,EAP0B,EAOnC3E,QAAoBC,EAPe,EAOfA,KAAa2E,EAPE,EAOT1E,MAIrC2E,EAAY,uCAAG,8BAAAlE,EAAA,+EAEM+D,EAAO,CAAE9D,UAAW,CAAE4D,iBAF5B,gBAETvE,EAFS,EAETA,KACRpD,EAAS,CACPhB,KAAML,EACNM,UAAWmE,EAAK6E,iBAElBL,GAAY,GACZ3J,aAAaiB,QAAQ,mBAAoByI,GACzCO,YAAW,WACTpF,EAAQgD,QAAQ,oBACf,KAXc,kDAajB5B,QAAQC,IAAI,UAAWf,GAbN,0DAAH,qDAuClB,OAPA8D,qBAAU,WACNS,GAfiB,WACnB,IAAMQ,EAAqBlK,aAAaC,QAAQ,oBACc,QAAzCD,aAAaC,QAAQ,kBAIvBiK,GAAsBR,EACvC7E,EAAQgD,QAAQ,kBAEhBkC,IAOFI,KAEC,CAACT,IAGI,kCACN,qBAAKtD,UAAU,gCAAgCC,oBAAkB,IAAjE,SACA,qBAAKD,UAAU,YAAf,SACM,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,uBAAf,UACG/E,EAAY,sBAAK+E,UAAU,sBAAsBqB,KAAK,QAA1C,uCAA4E,cAACb,EAAA,EAAD,gCAAwC,KAChIiD,EAAa,qBAAKzD,UAAU,mBAAmBqB,KAAK,QAAvC,wCAAkF,MAC9FiC,GAAeI,EAAkB,qBAAK1D,UAAU,mBAAmBqB,KAAK,QAAvC,oDAA8F,iB,kBCzElI2C,GAAqB,uCAAG,WAAOrJ,EAAasJ,GAApB,SAAAxE,EAAA,+EAC1ByE,KAAM9C,IAAN,UAAarE,iGAAb,iBAAgDpC,EAAhD,0BAAsEsJ,KAD5C,2CAAH,wDAIrBE,GAA2C,SAAC,GAAY,IAAXxJ,EAAU,EAAVA,KAChDsG,EAAWmD,cACXC,EAAU9B,IAAEnB,IAAIH,EAAU,SAAU,IAAIhH,MAAM,UAC9CgK,EAAOI,EAAQ7H,OAAS,EAAI6H,EAAQ,GAAK,GAGzC5F,EAAUC,cACV/C,EAAWO,IAP+C,EAStCiC,qBATsC,mBASzDa,EATyD,KASlDsF,EATkD,KAW1DC,EAAY,SAACC,GACfF,EAASE,GACTX,YAAW,WACPpF,EAAQgD,QAAQ,YACjB,MAuBP,OArBAoB,qBAAU,WAiBHoB,EAhBU,uCAAG,gCAAAxE,EAAA,+EAEWuE,GAAsBrJ,EAAMsJ,GAFvC,OAEFlF,EAFE,OAGRpD,EAAS,CACLhB,KAAML,EACNM,UAAWmE,EAAKA,OAEpBN,EAAQgD,QAAQ,kBAPR,gDASFgD,EAAWC,KAAKC,MAAMpC,IAAEnB,IAAF,KAAU,mBAAoB,OAC1DmD,GAAU,UAAAE,EAASzF,aAAT,eAAgB4F,UAAW,KAAGA,SAVhC,yDAAH,oDAgBJC,GACJN,EAAU,iBAChB,CAACtD,IAEI,mCACHjC,GAAS,eAACmB,EAAA,EAAD,CAAOxD,QAAS,SAAhB,UAA2BhC,EAA3B,2BAAwDqE,EAAxD,kCAA6F,cAAC,IAAD,CAAMoB,GAAG,SAAT,yBClDhG,OAA0B,iC,OC0D1B0E,OArDf,WACE,OACE,qBAAK9E,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAK+E,IAAKC,GAAMhF,UAAU,WAAWiF,IAAI,SAEzC,iGAEO,uEAFP,0BAIA,iCACE,0CACA,mBACEjF,UAAU,WACV4B,KAAK,uBACLtB,OAAO,SACP4E,IAAI,sBAJN,mBAQA,sCACA,mBACElF,UAAU,WACV4B,KAAK,wBACLtB,OAAO,SACP4E,IAAI,sBAJN,mBAQA,sCACA,mBACElF,UAAU,WACV4B,KAAK,gCACLtB,OAAO,SACP4E,IAAI,sBAJN,2BApBF,IA4BG,yCACD,mBACElF,UAAU,WACV4B,KAAK,8BACLtB,OAAO,SACP4E,IAAI,sBAJN,kC,SCUKC,GAhDI,SAAC,GAAD,EAAEpK,KAAF,IAAQqK,EAAR,EAAQA,SAAR,OAA6B,qBAAKpF,UAAU,kDAAf,SAChD,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACA,eAACqF,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiB3I,QAAQ,SAAS5C,GAAG,iBAArC,kBAIA,cAACsL,GAAA,EAASE,KAAV,UACE,cAACF,GAAA,EAASG,KAAV,CAAe5D,KAAK,IAApB,uBAKJ,eAACyD,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiB3I,QAAQ,SAAS5C,GAAG,iBAArC,mBAIA,eAACsL,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAASG,KAAV,CAAe5D,KAAK,eAApB,mBACA,cAACyD,GAAA,EAASG,KAAV,CAAe5D,KAAK,eAApB,4BAKJ,qBAAK5B,UAAU,uBAAf,SACE,oFAIF,qBAAKA,UAAU,WAAf,SACA,eAACqF,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiB3I,QAAQ,SAAS5C,GAAG,iBAArC,kBAMA,eAACsL,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAASG,KAAV,CAAe5D,KAAK,IAApB,SAAwB,cAAC,IAAD,CAAMxB,GAAG,kBAAT,8BACxB,cAACiF,GAAA,EAASG,KAAV,CAAe5D,KAAK,IAApB,SAAwB,cAAC,IAAD,CAAM5B,UAAU,GAAGI,GAAG,IAAIK,QAAS2E,EAAnC,oCCffK,I,OA1Ba,kBAAQ,qBAAKzF,UAAU,kDAAf,SAChC,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACA,eAACqF,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiB3I,QAAQ,SAAS5C,GAAG,iBAArC,kBAIA,cAACsL,GAAA,EAASE,KAAV,UACE,cAACF,GAAA,EAASG,KAAV,CAAe5D,KAAK,IAApB,yBAIJ,qBAAK5B,UAAU,uBAAf,SACE,0DAIF,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAMA,UAAU,GAAGI,GAAG,SAAtB,mBADF,OACiD,cAAC,IAAD,CAAMJ,UAAU,GAAGI,GAAG,YAAtB,gCCcxC+E,GAjCI,SAAC,GAAD,EAAEpK,KAAF,IAAQqK,EAAR,EAAQA,SAAR,OAA6B,qBAAKpF,UAAU,kDAAf,SAChD,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACA,eAACqF,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiB3I,QAAQ,SAAS5C,GAAG,iBAArC,kBAIA,cAACsL,GAAA,EAASE,KAAV,UACE,cAACF,GAAA,EAASG,KAAV,CAAe5D,KAAK,IAApB,yBAIJ,qBAAK5B,UAAU,uBAAf,SACE,kFAIF,qBAAKA,UAAU,WAAf,SACA,eAACqF,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,OAAV,CAAiB3I,QAAQ,SAAS5C,GAAG,iBAArC,kBAIA,eAACsL,GAAA,EAASE,KAAV,WACE,cAACF,GAAA,EAASG,KAAV,CAAe5D,KAAK,IAApB,SAAwB,cAAC,IAAD,CAAMxB,GAAG,kBAAT,8BACxB,cAACiF,GAAA,EAASG,KAAV,CAAe5D,KAAK,IAApB,SAAwB,cAAC,IAAD,CAAM5B,UAAU,GAAGI,GAAG,IAAIK,QAAS2E,EAAnC,oCCTfM,GAhBgB,WAC7B,IAAM3K,EAAOe,IACP6J,EAAezJ,IAEfkJ,EAAW,WACfO,EAAa,CAAEhL,KAAMJ,KAGvB,OAAIQ,GAAQA,EAAKpB,OACqB,IAAjCoB,EAAKf,MAAM4L,QAAQ,SAAyB,cAACC,GAAD,CAAa9K,KAAMA,EAAMqK,SAAUA,IACrE,cAAC,GAAD,CAAYrK,KAAMA,EAAMqK,SAAUA,IAG1C,cAAC,GAAD,KCTQU,I,2BAAAA,GATV,WACH,OACE,8BACE,mDCaOC,GAdmD,SAAC,GAA4B,IAA3B5E,EAA0B,EAA1BA,KAAME,EAAoB,EAApBA,KAAM5F,EAAc,EAAdA,SACtEV,EAAOe,IAEb,OAAGuF,IAAsC,IAA9BtG,EAAKf,MAAM4L,QAAQvE,GAClB,cAAC,IAAD,CAAUjB,GAAE,sBAAiBe,EAAjB,iBAA8BE,KAGlDtG,EAAKpB,MAID,mCAAG8B,IAHC,cAAC,IAAD,CAAU2E,GAAE,sBAAiBe,M,oBCgBhC6E,I,OAAwC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAY,EAT9C,SAACD,EAAWC,GACtC,IAAMC,EAAYD,EAEZE,EAAQD,EAAU9K,KAAO8K,EAAU9K,KAAKpB,MAAM,KAAQiM,EAAiBjM,MAAM,KAGnF,MAAO,CAACoM,QAFQJ,EAAKG,EAAM,IAEV/K,KAAM+K,EAAM,GAAIA,SAIFE,CAAoBL,EAAMC,GAAlDG,EADiE,EACjEA,QAAShL,EADwD,EACxDA,KAAM+K,EADkD,EAClDA,MAEtB,IAAIC,EACF,OAAQ,sDAAiBhL,KAG3B,GAAI6K,EAA6BK,UAAW,CAC1C,IAAMA,EAAaL,EAA6BK,UAChD,OAAQ,mCAAGA,GAAaA,EAAU,CAAC1K,MAAMwK,EAASD,QAAOH,WAG3D,OAAGI,EAAQG,QAAUH,EAAQ7J,OAAS,GAC5B,qCAAG6J,EAAQG,OAAO,EAAG,IAArB,SAGPH,EAAQzG,MAAQyG,EAAQI,QAAUL,EAAM5J,OAAS,EAC1C,mCAAI6J,EAAkBI,QAAO,SAACC,EAAGC,GAAJ,OAAQD,EAAIC,EAAEP,EAAM,MAAK,MAI9D,mCACCC,MC/BQO,GAAoC,SAAC,GAA+D,IAA7DX,EAA4D,EAA5DA,KAAMY,EAAsD,EAAtDA,SAAUxL,EAA4C,EAA5CA,KAA4C,IAAtCyL,cAAsC,MAA/B,CAAC,MAA8B,MAAtBC,kBAAsB,SAC9G,OACE,qBAAI/G,UAAU,OAAd,UAEE,oBAAIA,UAAU,KAAd,SAAmB,cAAC,IAAD,CAAMI,GAAE,gBAAW/E,EAAK2L,cAAhB,YAAiCf,EAAKlM,IAA9C,SAAqDkM,EAAKlM,OAC5E+M,EAAO3L,KAAI,SAAA+K,GAAK,MAAY,OAATA,GAAiB,6BAAI,cAAC,GAAD,CAAaD,KAAMA,EAAMC,MAAOA,SACxED,EAAKlL,MAAS,6BAAKkL,EAAKlL,KAAKjB,QAE7BiN,GAAc,oBAAI/G,UAAU,QAAd,SACb,cAACQ,EAAA,EAAD,CAAQ7D,QAAQ,SAASsK,KAAK,KAAKxG,QAAS,WAAKoG,EAASZ,IAA1D,0BCrBOiB,GAJQ,SAAC,GAAiB,IAAD,IAAfC,YAAe,MAAR,GAAQ,EACpC,OAAQ,gDAAiBA,EAAjB,W,UC8CGC,GAlC0C,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,KAAMC,EAAyD,EAAzDA,OAAQT,EAAiD,EAAjDA,SAAUU,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAQxG,OACI,8BACI,eAACC,GAAA,EAAD,CAAOL,KAAMA,EAAMC,OAAQA,EAA3B,UACI,cAACI,GAAA,EAAMhC,OAAP,CAAciC,aAAW,EAAzB,SACI,8BACI,eAACD,GAAA,EAAME,MAAP,qBAAqB,KAArB,IAA4BJ,GAAgBA,EAAanM,KAAzD,KAAiE,YAKzE,cAACqM,GAAA,EAAMG,KAAP,UACMJ,EACW,0CAAaF,EAAb,oBAAwCC,GAAgBA,EAAanM,KAArE,aAAqFmM,GAAgBA,EAAazN,GAAlH,WADC,+DAAkCwN,EAAlC,mBAA2D,kCAAKC,GAAgBA,EAAanM,KAAlC,OAA3D,WAA+G,kCAAKmM,GAAgBA,EAAazN,GAAlC,YAIjI,eAAC2N,GAAA,EAAMI,OAAP,WACI,cAACtH,EAAA,EAAD,CAAQE,SAAU+G,EAAU9K,QAAQ,SAAShC,KAAK,SAAS8F,QAtBpD,WACfgH,GACAZ,EAASW,IAoBD,oBACA,cAAChH,EAAA,EAAD,CAAQE,SAAU+G,EAAU9K,QAAQ,UAAU8D,QAAS6G,EAAvD,4BClCLS,GAJa,SAAC,GAAkB,IAAD,IAAhBC,aAAgB,MAAR,GAAQ,EAC1C,OAAQ,cAAC7H,EAAA,EAAD,CAAOxD,QAAS,SAAhB,gCAA2CqL,EAA3C,cC+IGC,GAnH+B,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,OAAQ7M,EAA8C,EAA9CA,KAA8C,IAAxC8M,iBAAwC,SAArBC,EAAqB,EAArBA,QAAStB,EAAY,EAAZA,OAAY,EAC5D3I,oBAAS,GADmD,mBAC7FkK,EAD6F,KAC/EC,EAD+E,OAEtDnK,oBAAS,GAF6C,gCAG5DA,mBAAS,OAHmD,mBAG7FqJ,EAH6F,KAG/Ee,EAH+E,OAIpDpK,oBAAS,GAJ2C,mBAI7FqK,EAJ6F,KAI3EC,EAJ2E,OAKxCtK,oBAAS,GAL+B,mBAK7FuK,EAL6F,KAKrEC,EALqE,OAOtExK,oBAAS,GAP6D,mBAOpFyK,GAPoF,aAQ5EzK,mBAAc,IAR8D,mBAQ7FY,EAR6F,KAQvF8J,EARuF,OAS1E1K,qBAT0E,mBAS7Fa,EAT6F,KAStFsF,EATsF,OAW7CwE,mBAASX,EAAWC,EAAQW,iBAAmBX,EAAQY,gBAAiB,CAC7HC,QAAS,SAACtC,GACR9G,QAAQC,IAAI,eAAgB6G,EAAE/B,SACd,8BAAb+B,EAAE/B,QACH0D,GAAgB,GAEhBhE,EAASqC,IAEVuC,YAAa,SAACC,GACftJ,QAAQC,IAAI,oBAAqBqJ,GACjCP,GAAW,GAEX,IAAMQ,EAAaC,OAAOC,oBAAoBH,GAC3CC,EAAW5M,OAAS,GAAK2M,EAAEC,EAAW,IAAI5M,OAAS,EACpDqM,EAAQM,EAAEC,EAAW,KAErBP,EAAQ,KAIZnJ,UAAW,CAACwI,YApBGqB,EAXmF,EAW5FC,QAA+BC,EAX6D,EAWtE3K,QAXsE,EAwC9FH,sBAAYyJ,EAAQsB,gBAAiB,CACvC9K,YAAa,OACbsK,YAAa,SAACnK,GACZc,QAAQC,IAAI,SAAUf,EAAK4K,eAC3BC,IACAL,KAEFN,QAAS,SAACtC,GACR9G,QAAQC,IAAI,eAAgB6G,EAAE/B,SACd,8BAAb+B,EAAE/B,SACH0D,GAAgB,MAlD4E,mBAsChGuB,EAtCgG,YAuD5FD,GAvD4F,EAuC9F9K,QAvC8F,EAuCtEE,MAgBD,WACzByJ,GAAoB,GACpBF,EAAgB,QAGZ1B,EAAW,SAACiD,GAChBnB,GAA0B,GAC1BF,GAAoB,GACpBF,EAAgBuB,IAalB,OAAGzB,EACO,cAAC,GAAD,CAAcL,MAAO,aAE3ByB,EAAqB,cAAC,GAAD,CAAStC,KAAM,aAGpC,gCAEKnI,GAAU,+CAAgBA,EAAM4F,WAEjC,eAAC,KAAD,CAAQmF,YAAU,EAAlB,UACE,gCACE,+BACE,oCADF,OAEGjD,QAFH,IAEGA,OAFH,EAEGA,EAAQ3L,KAAI,SAAA6O,GAAC,MAAS,OAAJA,GAAY,6BAAMA,EAAU3O,KAAQ2O,EAAU3O,KAAO2O,OACvE7B,GAAa,sCACd,4BAGJ,gCAEEpJ,EAAKvC,QAAUuC,EAAK5D,KAAI,SAAC8O,GAAD,OAAoB,cAAC,GAAD,CAAS5O,KAAMA,EAAM4K,KAAMgE,EAAapD,SAAUA,EAAUC,OAAQA,EAAQC,WAAYoB,YAMxI,cAAC,GAAD,CACMd,KAAMmB,EACNlB,OAAQsC,EACR/C,SAxCG,SAACW,GAChBmB,GAA0B,GAC1BkB,EAAsB,CACpBnK,UAAW,CACT3F,GAAIyN,EAAazN,OAqCTwN,SAAU,UACVC,aAAcA,EACdC,SAAUiB,Q,oBCzItBwB,I,OAAmB,CACrBC,SAAW,WACXC,aAAe,eACfC,YAAc,cACdC,gBAAkB,kBAClBC,UAAY,YACZC,cAAgB,gBAChBC,QAAU,aA+FCC,GAjFuC,SAAC,GAAwB,IAAvB5D,EAAsB,EAAtBA,OAAQpJ,EAAc,EAAdA,SAAc,EAChCS,mBAAS2I,EAAO,IADgB,mBACnE6D,EADmE,KACpDC,EADoD,OAE9BzM,mBAAS,YAFqB,mBAEnE0M,EAFmE,KAEnDC,EAFmD,OAGtC3M,mBAAS,IAH6B,mBAGnE4M,EAHmE,KAGvDC,EAHuD,OAI9C7M,mBAAsB,QAJwB,mBAInE+J,EAJmE,KAI3D+C,EAJ2D,KAyBpEC,EAAWC,uBAAY,SAACnB,GACvB9B,GAAU8B,IACTnK,QAAQC,IAAI,eAAgBkK,GAC5BiB,EAAUjB,GACVtM,EAASsM,MAEd,CAAC9B,EAAQxK,EAAUuN,IAEhBG,EAAgBD,uBAAY,SAACjF,EAAOmF,EAAQC,GAC9C,GAAIA,GAAkB,WAAVD,EAAZ,CAKA,IAAMrB,EAAI,GACVA,EAAE,GAAD,OAAI9D,EAAJ,YAAamF,IAAYC,EAC1BJ,EAASlB,QANLkB,EAAS,QAQd,CAACA,IAEEK,EAAK,SAACC,GACR,IAAMC,EAAKD,EACX,OAAO,WAzCW,IAACtF,IA0CDuF,EAzClB5L,QAAQC,IAAI,gBAAiBoG,GAC7B0E,EAAiB1E,GACjBkF,EAAclF,EAAO2E,EAAgBE,KA2CnCW,EAAK,SAACF,GACR,IAAMC,EAAKD,EACX,OAAO,WA1CY,IAACH,IA0CSI,EAzC7B5L,QAAQC,IAAI,iBAAkBuL,GAC9BP,EAAkBO,GAClBD,EAAcT,EAAeU,EAAQN,KA2CzC,OACI,eAACY,GAAA,EAAD,CAAY3L,UAAU,OAAtB,UACI,cAAC4L,GAAA,EAAD,CACI5L,UAAU,eACV6L,GAAIF,KAAWG,QACfnP,QAAQ,UACRoP,MAAOpB,EACP5Q,GAAG,yBALP,SAMS+M,EAAO3L,KAAI,SAACqQ,GAAD,OAAO,cAACnG,GAAA,EAASG,KAAV,CAAuB/E,QAAS8K,EAAGC,GAAnC,SAAwCA,EAAEtQ,YAAtBsQ,QAE/C,cAACI,GAAA,EAAD,CACI5L,UAAU,gBACV6L,GAAIF,KAAWG,QACfnP,QAAQ,eACRoP,MAAO7B,GAAiBW,GACxB9Q,GAAG,yBALP,SAMSsP,OAAOC,oBAAoBY,IAAkB/O,KAAI,SAACqQ,GAAD,OAAO,cAACnG,GAAA,EAASG,KAAV,CAAuB/E,QAASiL,EAAGF,GAAnC,SAAwCtB,GAAiBsB,IAArCA,QAErF,cAACpO,EAAA,EAAKI,QAAN,CAAc3B,MAAOkP,EAAYrN,SA1DlB,SAACiJ,GACpB,IAAM2E,EAAO3E,EAAErG,OAAOzE,MACtBgE,QAAQC,IAAI,iBAAkB6G,EAAG2E,GACjCN,EAAcM,GACdF,EAAcT,EAAeE,EAAgBS,UC7B/CU,I,OAAe,WACjB,IAAIlC,EAAU,GAEd,OADAA,EAAIzO,KAAO,MACJ,CAAC4Q,IAAKnC,KAGXoC,GAAS,SAACC,EAAUjE,GAEtB,IAAI4B,EAAU5B,EAEE,OAAbiE,EAAK9Q,QACJyO,EAAM,CAACA,IACHzO,KAAO,OAGf8Q,EAAKvM,KAAKkK,IAGRsC,GAAqB,SAArBA,EAAsBD,GACxB,IADsC,EAClCjE,EAAS,GADyB,eAGvBiE,GAHuB,IAGtC,IAAI,EAAJ,qBAAqB,CAAC,IAAZE,EAAW,QACdA,EAAEhR,MAAQgR,EAAE7P,OAAS,EACpB0L,GAAM,WAAQkE,EAAmBC,IAEjCnE,GAAM,YAASmE,EAAEnE,OAAX,MAPwB,8BAWtC,MAAM,IAAN,OAAWiE,EAAK9Q,KAAhB,aAAyB6M,EAAO1B,OAAO,GAAvC,OAGE8F,GAAiB,SAACpE,GACpB,IAAIqE,EAAK,CACLrE,OAAQ,GACRsE,OAAQ,IAMZ,OAHAD,EAAGrE,OAASA,EAAO+D,IAAIzP,OAAS,EAApB,mBAAoC4P,GAAmBlE,EAAO+D,KAA9D,KAAwE,GACpFM,EAAGC,OAASD,EAAGC,OAAOhQ,OAAQ,EAAlB,WAA0B+P,EAAGC,OAAOhG,OAAO,GAA3C,KAAmD,GAExD+F,GAiFIE,GA7E0C,SAAC,GAAsD,IAArDpR,EAAoD,EAApDA,KAAMqR,EAA8C,EAA9CA,OAA8C,IAAtCvE,iBAAsC,SAArBC,EAAqB,EAArBA,QAAStB,EAAY,EAAZA,OAAY,EAE/E3I,mBAASgK,EAAY6D,KAAiB,MAFyC,mBAEpG9D,EAFoG,KAE5F+C,EAF4F,KAGrGxM,EAAUC,cAGViO,EAAsB,SAACD,GACzB,IAAME,EAAgBZ,KAMtB,OAJGU,GACCR,GAAOU,EAAcX,IAAK,CAACY,WAAW,CAAC9S,GAAG2S,KAGvCE,GAGLxB,EAAgB,SAAClD,GACnB,IAAM4E,EAAmBR,GAAepE,GAExCrI,QAAQC,IAAI,gBAAiB,CAACoI,SAAQ4E,qBAEtC7B,EAAU/C,IAGdrF,qBAAU,WACN,IAAM+J,EAAgBD,EAAoBD,GAC1CtB,EAAcwB,KAEf,CAACF,IAGJ,IAAMK,EAAiB5B,uBAAY,SAACnB,GAChC,IAAM4C,EAAgBD,EAAoBD,GAEvC1C,GACCkC,GAAOU,EAAcX,IAAIjC,GAG7BoB,EAAcwB,KAEf,CAACF,IAUJ,OAAIvE,GAAcD,EAKd,mCACA,oCACA,6BAAK7M,IACD,sBAAK2E,UAAU,WAAf,UAEI,cAAC,GAAD,CAAY8G,OAAQA,EAAQpJ,SAAUqP,IACtC,2BAKJ,sBAAK/M,UAAU,YAAf,UAEA,cAAC,GAAD,CAAO3E,KAAMA,EAAM6M,OAAQA,EAAQE,QAASA,EAASD,UAAWA,EAAWrB,OAAQA,IACnF,cAACtG,EAAA,EAAD,CAAQC,QA3BI,WAChBhC,EAAQmB,KAAK,SAAWvE,EAAK2L,cAAgB,YA0BzC,gCAlBG,M,SCvGFgG,I,OAAiB,SAACC,GAE7B,OAAOA,EADS5D,OAAO6D,KAAKD,GAAS,MC6GtBE,GApHkE,SAAC,GAA+B,IAA9BtR,EAA6B,EAA7BA,MAAOuK,EAAsB,EAAtBA,MAAOnI,EAAe,EAAfA,IAAKgI,EAAU,EAAVA,KAC9FI,EAAUxK,EACVR,EAAO+K,EAAM5J,OAAO,GAAK4J,EAAM,GAC/BgH,EAAe/G,EAAQzG,MAAQyG,EAAQI,QAAUL,EAAM5J,OAAS,EAAK6J,EAAkBI,QAAO,SAACC,EAAGC,GAAJ,OAAQD,EAAC,YAAQC,EAAEtL,MAAS,IAAImL,OAAO,GAAKH,EAHlC,EAKpFlI,mBAASiP,GAL2E,mBAKvGrB,EALuG,KAKhGsB,EALgG,OAMtFlP,mBAAgB,IANsE,mBAMvGY,EANuG,KAMjG8J,EANiG,OAQvDC,mBAAS7K,EAAIqP,MAAO,CACzErE,QAAS,SAACtC,GACR9G,QAAQC,IAAI,2BAA4B6G,EAAE/B,SACvC+B,EAAE/B,SAKJsE,YAAa,SAACqE,GACf1N,QAAQC,IAAI,oBAAqByN,GAGjC,IAAMnE,EAAaC,OAAOC,oBAAoBiE,GAC9C,GAAGnE,EAAW5M,OAAS,GAAK+Q,EAAKnE,EAAW,IAAI5M,OAAS,EAAE,CACzD,IAEMgR,EAFMD,EAAKnE,EAAW,IAEVjO,KAAI,SAACC,GACrB,MAAO,CACLrB,GAAIqB,EAAErB,GACN0T,SAAqC,IAA5B1B,EAAMnG,QAAQxK,EAAEC,IACzB0C,MAAO3C,EAAEC,OAIbwN,EAAQ2E,QAER3E,EAAQ,OAlCgG,KAQtGW,QARsG,EAQhF1K,QAmC1BH,sBAAYV,EAAIyP,IAAK,CACvB9O,YAAa,OACbsK,YAAa,SAACyE,GACZ,IAAM5O,EAAOiO,GAAeW,GAC5B9N,QAAQC,IAAI,QAAS6N,EAAK5O,EAAKhF,KAEjCkP,QAAS,gBAjDmG,mBAyC5G2E,EAzC4G,iBA0C1G9O,QA1C0G,EA0C9EC,KA1C8E,EA0CvDC,MAanDL,sBAAYV,EAAI4P,OAAQ,CAC1BjP,YAAa,OACbsK,YAAa,SAACyE,GACZ,IAAM5O,EAAOiO,GAAeW,GAC5B9N,QAAQC,IAAI,SAAU6N,EAAK5O,EAAKhF,KAElCkP,QAAS,gBA7DmG,mBAqD5G6E,EArD4G,cAsD1GhP,QAtD0G,EAsD3EC,KAtD2E,EAsDjDC,MAkD7D,OAAQ,cAAC4M,GAAA,EAAD,CAAgB7R,GAAG,wBAAwBgS,MAAOA,EAAlD,SACHhN,GAAQA,EAAK5D,KAAI,SAACgO,GAAD,OAClB,cAAC9D,GAAA,EAASG,KAAV,CAAgB/E,QAAS,SAACkG,GAAD,OA1CX,SAAC9K,GACjB,IAAMkS,EAAUhP,EAAK5D,KAAI,SAACgO,GAIxB,OAHGA,EAAEpL,QAAUlC,EAAMkC,QACnBoL,EAAEsE,SAAWtE,EAAEsE,SAEV,gBAAItE,MAGP6E,EAAeD,EAAkBtH,QAAO,SAACC,EAAGC,GAChD,OAAGA,EAAE8G,QAAe,GAAN,OAAU/G,EAAV,aAAgBC,EAAE5I,OACpB2I,IACX,IAAIF,OAAO,GAEd3G,QAAQC,IAAI,aAAc,CAACiO,UAASlS,QAAOmS,gBAExCnS,EAAM4R,QACPG,EAAY,CACVlO,UAAW,CACTuO,IAAKpS,EAAM9B,GACXmU,IAAKjI,EAAKlM,MAId+T,EAAe,CACbpO,UAAW,CACTuO,IAAKpS,EAAM9B,GACXmU,IAAKjI,EAAKlM,MAMhB8O,EAAQkF,GACRV,EAASW,GAS6BG,CAAUhF,IAA9C,SACE,cAAC/L,EAAA,EAAKgR,MAAN,CACIzT,KAAK,WACLoD,MAAOoL,EAAEpL,MACT0P,QAAStE,EAAEsE,kBC9GnBzE,GAAkB/K,YAAH,+IAQf8K,GAAmB9K,YAAH,yMAahByL,GAAkBzL,YAAH,kHAQfoQ,GAAkBpQ,YAAH,kGAOfqQ,GAAerQ,YAAH,sNAUZsQ,GAAkBtQ,YAAH,gOAWfuQ,GAA2D,SAAC,GAAyB,IAAxB3S,EAAuB,EAAvBA,MAAMuK,EAAiB,EAAjBA,MAAOH,EAAU,EAAVA,KAGxEhI,EAAM,CACVqP,MAAOe,GACPX,IAAKY,GACLT,OAAQU,IAGV,OAAO,cAAC,GAAD,CAAa1S,MAAOA,EAAOuK,MAAOA,EAAOnI,IAAKA,EAAKgI,KAAMA,KAgBnDwI,GAb4D,SAAC,GAA+B,IAA9B/B,EAA6B,EAA7BA,OAA6B,IAArBvE,iBAAqB,SACtG,OACI,8BACI,cAAC,GAAD,CACI9M,KAAM,QACNyL,OAAQ,CAAC,QAAQ,WAAY,CAACzL,KAAM,aAAckL,UAAWiI,IAAc,YAC3E9B,OAAQA,EACRvE,UAAWA,EACXC,QAAS,CAACY,mBAAiBD,oBAAkBW,yBC9EvDV,GAAkB/K,YAAH,+IAQf8K,GAAmB9K,YAAH,qJAShByL,GAAkBzL,YAAH,0HAsBNyQ,GAb+D,SAAC,GAA+B,IAA9BhC,EAA6B,EAA7BA,OAA6B,IAArBvE,iBAAqB,SACzG,OACI,8BACI,cAAC,GAAD,CACI9M,KAAM,QACNyL,OAAQ,CAAC,QACT4F,OAAQA,EACRvE,UAAWA,EACXC,QAAS,CAACY,mBAAiBD,oBAAkBW,yBCd9C,SAASiF,KAEtB,OACM,cAAC,IAAD,UACE,gCACI,cAAC,GAAD,IAQF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACzN,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOyN,OAAK,EAACzN,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,cAAC,GAAD,CAAgBxG,KAAM,eAExB,cAAC,IAAD,CAAOwG,KAAK,gBAAZ,SACE,cAAC,GAAD,CAAgBxG,KAAM,aAExB,cAAC,IAAD,CAAOwG,KAAK,gBAAZ,SACE,cAAC,GAAD,CAAgBxG,KAAM,aAExB,cAAC,IAAD,CAAOwG,KAAK,YAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,6BAA6BoF,UAAWsI,IACpD,cAAC,IAAD,CAAOD,OAAK,EAACzN,KAAK,sBAAlB,SACE,cAAC,EAAD,MAIF,cAAC,IAAD,CAAOA,KAAK,4BAA4BoF,UAAWlD,IAEnD,cAAC,GAAD,CAAclC,KAAK,kBAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAIZ,cAAC,GAAD,CAAcA,KAAK,eAAeE,KAAM,QAAxC,SACE,cAAC,GAAD,CAAW8G,WAAW,MAExB,cAAC,GAAD,CAAchH,KAAK,eAAeE,KAAM,QAAxC,SACE,cAACyN,GAAD,CAAe3G,WAAW,c,aC3EnC,SAAS4G,KAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIC,SAA0B,SAACC,GAAD,OACnCrL,YAAW,kBAAMqL,EAAQ,CAAEnQ,KAAMiQ,MAAW,QCMhD,IAUaG,GAAiBC,aAC5B,qBAD4C,uCAE5C,WAAOJ,GAAP,eAAAvP,EAAA,sEACyBsP,GAAWC,GADpC,cACQvK,EADR,yBAGSA,EAAS1F,MAHlB,2CAF4C,uDASjCsQ,GAAeC,aAAY,CACtCjU,KAAM,UACNkU,aArBiC,CACjC1T,MAAO,EACPqH,OAAQ,QAqBRsM,SAAU,CACRC,UAAW,SAAChV,GAKVA,EAAMoB,OAAS,GAEjB6T,UAAW,SAACjV,GACVA,EAAMoB,OAAS,GAGjB8T,kBAAmB,SAAClV,EAAOC,GACzBD,EAAMoB,OAASnB,EAAOkV,UAK1BC,cAAe,SAACC,GACdA,EACGC,QAAQZ,GAAea,SAAS,SAACvV,GAChCA,EAAMyI,OAAS,aAEhB6M,QAAQZ,GAAec,WAAW,SAACxV,EAAOC,GACzCD,EAAMyI,OAAS,OACfzI,EAAMoB,OAASnB,EAAOkV,c,GAK6BP,GAAaa,QAmBzDb,I,GAnBAI,U,GAAWC,U,GAAWC,kBAmBtBN,GAAf,SC9Eac,GAAQC,aAAe,CAClCC,QAAS,CACPC,QAASC,M,UCOOvV,QACW,cAA7BwV,OAAOvP,SAASwP,UAEe,UAA7BD,OAAOvP,SAASwP,UAEhBD,OAAOvP,SAASwP,SAASnO,MACvB,2D,wBChBOxH,GAAY,uCAAG,gCAAA2E,EAAA,6DAClBiN,EAAS9S,aAAaC,QAAQ,WAC9BF,EAAQC,aAAaC,QAAQ,cAC7BiB,EAAelB,aAAaC,QAAQ,qBAHlB,kBAIjBqK,KAAMwM,KAAN,UAAc3T,iGAAd,YAAoD,CACvDgE,MAAM,qSAQNrB,UAAW,CACPgN,SACA/S,QACAmB,mBAhBgB,2CAAH,qDCInB6V,GAAY,I,OAAIC,GAAU,CAC9BC,SAAU,SAACC,EAAOC,EAAW/R,GAC3B,OAAO,GAETgS,MAAO,SAACF,EAAOC,EAAW/R,GACxB,OAAe,IAAR8R,EAAeG,KAAKC,YAI3BC,IAAe,EACfC,GAAsB,GASpBC,GAAyB,SAACC,EAAaP,GAG3C,IAAIQ,EA6CJ,OA3CKJ,GAkCHI,EAAWC,sBACT,IAAIvC,SAAQ,SAAAC,GAEVkC,GAAgBxR,MAAK,kBAAMsP,YApC/BiC,IAAe,EACfI,EAAWC,sBACT1W,KAEG2W,MAAK,YAAa,IACHC,EADE,EAAV3S,KACCA,KAAO2S,gBACd9X,aAAaiB,QAAQ,aAAc6W,EAAgB/X,OACnDC,aAAaiB,QAAQ,oBAAqB6W,EAAgB5W,cAlBlEsW,GAAgBjW,KAAI,SAAAwW,GAAQ,OAAIA,OAChCP,GAAkB,GAqBV,IAAMQ,EAAab,EAAUc,aAAaC,QAQ1C,OANAf,EAAUgB,WAAW,CACnBD,QAAQ,6BACHF,GADE,IAELI,cAAc,UAAD,OAAYN,EAAgB/X,WAGtC2X,EAAQP,MAEhBkB,OAAM,SAAAjT,GACLoS,GAAkB,MAInBc,SAAQ,WACPf,IAAe,MAEnBjJ,QAAO,SAAArM,GAAK,OAAIb,QAAQa,OAarB0V,EAASY,SAAQ,WACtB,OAAOb,EAAQP,OAIbqB,GAAWL,cAAW,SAACxP,EAAD,GAAqB,IAAfuP,EAAc,EAAdA,QAE1BnY,EAAQC,aAAaC,QAAQ,cAEnC,MAAO,CACLiY,QAAQ,6BACHA,GADE,IAELE,cAAerY,EAAK,iBAAaA,GAAU,SAK3C0Y,GAAWC,yBAAe,CAC9BC,IAAKxV,mGAKDyV,GAAWvJ,cAAQ,YAA0D,IAAvDwJ,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,aAAc3B,EAAyB,EAAzBA,UAAWO,EAAc,EAAdA,QAQhE,GAPEmB,GACFA,EAActX,KAAI,gBAAGyJ,EAAH,EAAGA,QAAS+N,EAAZ,EAAYA,UAAWxR,EAAvB,EAAuBA,KAAvB,OAChBtB,QAAQC,IAAR,oCAC+B8E,EAD/B,uBACqD+N,EADrD,mBACyExR,OAIxEsR,IAA8B,OAAbA,QAAa,IAAbA,OAAA,EAAAA,EAAejW,QAAS,GAAiC,gBAA5BiW,EAAc,GAAG7N,QAEhE,OAAOyM,GAAuBC,EAASP,GAGvC2B,GAAc7S,QAAQC,IAAR,2BAAgC4S,OAoBrCE,GAjBa,IAAIC,eAAa,CAC3CC,KAAMC,aAAWC,KAAK,CAACrC,GAAW6B,GAAUJ,GAAUC,KACtDY,MAAO,IAAIC,gBACXC,eAAgB,CACdC,WAAY,CACVxU,YAAa,QAEfmC,MAAO,CACLnC,YAAa,QAEfyU,OAAQ,CACNzU,YAAa,UC/GnB0U,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAUrD,MAAOA,GAAjB,SACE,cAAC,iBAAD,CAAgBsD,OAAQb,GAAxB,SACE,cAACpX,EAAD,UACE,cAACmT,GAAD,YAKR+E,SAASC,eAAe,SHkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrC,MAAK,SAACsC,GACLA,EAAaC,gBAEd/B,OAAM,SAACjT,GACNa,QAAQb,MAAMA,EAAM4F,c","file":"static/js/main.b51a0b3c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport interface UserToken {\r\n  token: string\r\n  refreshToken: string\r\n  user: User\r\n}\r\n\r\nexport interface User {\r\n    id: string,\r\n    email: string,\r\n    verified: boolean,\r\n    roles: UserRole[]\r\n}\r\n\r\nexport interface UserRole {\r\n  name: string\r\n}\r\n\r\nconst userToStorage = (userToken: UserToken) => {\r\n    localStorage.setItem('user.token', userToken.token)\r\n    localStorage.setItem('user.refreshToken', userToken.refreshToken)\r\n    localStorage.setItem('user.id', userToken.user.id)\r\n    localStorage.setItem('user.email', userToken.user.email)\r\n    localStorage.setItem('user.verified', Boolean(userToken.user.verified).toString())\r\n    localStorage.setItem('user.roles', userToken.user.roles.map(r=>r.name).toString())\r\n}\r\n\r\nconst removeUserFromStorage = () => {\r\n  localStorage.removeItem('user.refreshToken')\r\n  localStorage.removeItem('user.token')\r\n  localStorage.removeItem('user.id')\r\n  // localStorage.removeItem('user.email')\r\n  localStorage.removeItem('user.verified')\r\n  localStorage.removeItem('user.roles')\r\n}\r\n\r\nconst userFromStorage = () => {\r\n    const token = localStorage.getItem('user.token')\r\n    if(!token) {\r\n        return {}\r\n    }\r\n\r\n    return {\r\n        token,\r\n        email: localStorage.getItem('user.email'),\r\n        id: localStorage.getItem('user.id'),\r\n        roles: localStorage.getItem('user.roles')?.split(','),\r\n    }\r\n}\r\n\r\n// https://kentcdodds.com/blog/how-to-use-react-context-effectively\r\nconst UserStateContext = React.createContext<any | null>(null)\r\nconst UserDispatchContext = React.createContext<any | null>(null)\r\n\r\nconst USER_INIT = 'USER_INIT'\r\nconst USER_LOGIN = 'USER_LOGIN'\r\nconst USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nconst userReducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case USER_INIT: {\r\n      return userFromStorage()\r\n    }\r\n    case USER_LOGIN: {\r\n      userToStorage(action.userToken)\r\n      return {\r\n        id: action.userToken.user.id,\r\n        token: action.userToken.token,\r\n        email: action.userToken.user.email,\r\n        roles: action.userToken.user.roles?.map((r: { name: string })=>r.name),\r\n        verified: Boolean(action.userToken.user.verified),\r\n      } as User\r\n    }\r\n    case USER_LOGOUT: {\r\n      removeUserFromStorage()\r\n      return {}\r\n    }\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({children}: any) {\r\n  const [state, dispatch] = React.useReducer(userReducer, userFromStorage())\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useUserState() {\r\n  const context = React.useContext(UserStateContext)\r\n  if (context === undefined) {\r\n    throw new Error('useCountState must be used within a UserProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  const context = React.useContext(UserDispatchContext)\r\n  if (context === undefined) {\r\n    throw new Error('useCountDispatch must be used within a UserProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, USER_INIT, USER_LOGIN, USER_LOGOUT }","\r\n\r\nexport const isEmailValid = (email: string) => {\r\n    if(process.env.NODE_ENV === 'development') return true\r\n\r\n    return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\r\n}\r\n\r\nexport const isPasswordValid = (password: string) => {\r\n    //if(process.env.NODE_ENV === 'development') return true\r\n\r\n    const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n    return regularExpression.test(password)\r\n}\r\n\r\nexport interface IPasswordStrongResult {\r\n    valid: boolean\r\n    strong: number\r\n    name: string\r\n    variant: string\r\n}\r\nexport const passwordStrong = (password: string):IPasswordStrongResult => {\r\n    const length = password.length\r\n\r\n    if(length < 1){\r\n        return {\r\n           valid: false,\r\n           strong: 0,\r\n           name: '',\r\n           variant: 'danger'  \r\n        } as IPasswordStrongResult\r\n    }\r\n\r\n    if(length >= 15){\r\n        return {\r\n            valid: true,\r\n            strong: 100,\r\n            name: 'strong',\r\n            variant: 'success' \r\n         } as IPasswordStrongResult\r\n    }\r\n\r\n    const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : ( /(?=.*[A-Z])/.test(password) ? 1 : 0)\r\n    const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : ( /(?=.*[a-z])/.test(password) ? 1 : 0)\r\n    const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : ( /(?=.*[0-9])/.test(password) ? 1 : 0)\r\n    const special = /(?=.*[!@#$%^&*]){2,}/.test(password) ? 2 : ( /(?=.*[!@#$%^&*])/.test(password) ? 1 : 0)\r\n    \r\n    const value = capital + lower + number + special\r\n\r\n    const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\r\n    let percentage = (value+(length/4))\r\n    if(percentage > 10) percentage = 10\r\n\r\n    return {\r\n        valid,\r\n        strong: percentage * 10,\r\n        name: value > 6 ? 'strong' : (value > 4 ? 'intermediate' : (valid ? 'weak' : 'poor')),\r\n        variant: percentage > 6 ? 'success' : (valid ? 'warning' : 'danger'),\r\n    } as IPasswordStrongResult\r\n    \r\n}","import React from 'react'\r\nimport { Form, ProgressBar } from 'react-bootstrap'\r\nimport { IPasswordStrongResult } from '../../../app/utils'\r\n\r\nexport interface IPasswordComponent {\r\n    strongPassword: IPasswordStrongResult,\r\n    password: string\r\n    onPasswordChange: (arg:any) => void\r\n}\r\n\r\nexport const PasswordComponent:React.FC<IPasswordComponent> = ({onPasswordChange, password, strongPassword}) => (\r\n    <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={onPasswordChange}\r\n            value={password}\r\n            isInvalid={!strongPassword.valid}\r\n        />\r\n        <Form.Text>Make sure it's at least 15 characters OR at least 8 characters including a number and a lowercase letter</Form.Text>\r\n        <ProgressBar now={strongPassword.strong} label={strongPassword.name} variant={strongPassword.variant}/>\r\n    </Form.Group>\r\n)\r\n\r\nexport default PasswordComponent","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button, ProgressBar } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { User, useUserDispatch, USER_LOGIN } from '../../../app/userContext';\r\nimport { isEmailValid, passwordStrong } from \"../../../app/utils\";\r\nimport PasswordComponent from \"./PasswordComponent\";\r\n\r\nconst REGISTER_MUTATION = gql`\r\n  mutation register($email: String!, $pass: String!) {\r\n    register_v1(email: $email, password: $pass) {\r\n      refreshToken\r\n      token\r\n      user {\r\n        roles{name}\r\n        id,\r\n        email,\r\n        verified\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Register: React.FC = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [copy, setCopy] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const dispatch = useUserDispatch()\r\n\r\n  const [register, { loading, data, error }] = useMutation(REGISTER_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [emailProbablyTaken, setEmailProbablyTaken] = useState(false);\r\n  const [strong, setStrong] = useState(passwordStrong(''))\r\n\r\n  const [invalidCopy, setInvalidCopy] = useState(false);\r\n\r\n  const onRegister = async () => {\r\n    if(!isEmailValid(email)) {\r\n      return setInvalidEmail(true)\r\n    }\r\n\r\n    if (pass !== copy) {\r\n      setInvalidCopy(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      const { data } = await register({ variables: { email, pass } })\r\n      dispatch({\r\n        type: USER_LOGIN,\r\n        userToken: data.register_v1\r\n      })\r\n      history.push('/user/projects')\r\n    } catch (ex) {\r\n        console.log('onError', data)\r\n        setEmailProbablyTaken(true)\r\n      }\r\n  \r\n  };\r\n\r\n\r\n  const onEmailChange = (event: any) => {\r\n    setEmail(event.target.value);\r\n    setInvalidEmail(false);\r\n    setEmailProbablyTaken(false)\r\n  };\r\n\r\n  const onPasswordChange = (event: any) => {\r\n    const pass = event.target.value as string\r\n\r\n    setPass(pass);\r\n    setInvalidEmail(false);\r\n    setStrong(passwordStrong(pass))\r\n  };\r\n\r\n  const onCopyChange = (event: any) => {\r\n    const c = event.target.value\r\n    setCopy(c)\r\n    setInvalidEmail(false)\r\n\r\n    if (c == pass) {\r\n      setInvalidCopy(false)\r\n    }\r\n  };\r\n\r\n  return (<>\r\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <h1>User Registration</h1>\r\n                  <p>All big things starting here</p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n              <Form>\r\n                {invalidEmail && (<Alert variant={\"danger\"}>Email is not in good shape...</Alert>)}\r\n                {emailProbablyTaken && (<Alert variant={\"danger\"}>Email is probably taken, did you <Link to=\"/forgotten-password\">forgotten password</Link>?</Alert>)}\r\n                {invalidCopy && (<Alert variant={\"danger\"}>The retyped password is not the same</Alert>)}\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={onEmailChange}\r\n                    value={email}\r\n                    isInvalid={invalidEmail}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n          </Form.Text>\r\n                </Form.Group>\r\n\r\n                <PasswordComponent password={pass} onPasswordChange={onPasswordChange} strongPassword={strong} />\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Re-Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Retype Password\"\r\n                    onChange={onCopyChange}\r\n                    value={copy}\r\n                    isInvalid={invalidCopy}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n\r\n              <div id='submit' className=\"pull-left\">\r\n                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRegister()}>Register</Button>}\r\n                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                <div className=\"clearfix\"></div>\r\n\r\n                <div className=\"spacer-single\"></div>\r\n\r\n                {/* <ul className=\"list s3\">\r\n                  <li>Or login with:</li>\r\n                  <li><a href=\"#\">Facebook</a></li>\r\n                  <li><a href=\"#\">Google</a></li>\r\n                  <li><a href=\"#\">Instagram</a></li>\r\n                </ul> */}\r\n\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","\r\n\r\nexport const isEmailValid = (email: string) => {\r\n    if(process.env.NODE_ENV === 'development') return true\r\n\r\n    return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\r\n}\r\n\r\nexport const isPasswordValid = (password: string) => {\r\n    //if(process.env.NODE_ENV === 'development') return true\r\n\r\n    const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n    return regularExpression.test(password)\r\n}\r\n\r\nexport interface IPasswordStrongResult {\r\n    valid: boolean\r\n    strong: number\r\n    name: string\r\n    variant: string\r\n}\r\nexport const passwordStrong = (password: string):IPasswordStrongResult => {\r\n    const length = password.length\r\n\r\n    if(length < 1){\r\n        return {\r\n           valid: false,\r\n           strong: 0,\r\n           name: '',\r\n           variant: 'danger'  \r\n        } as IPasswordStrongResult\r\n    }\r\n\r\n    if(length >= 15){\r\n        return {\r\n            valid: true,\r\n            strong: 100,\r\n            name: 'strong',\r\n            variant: 'success' \r\n         } as IPasswordStrongResult\r\n    }\r\n\r\n    const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : ( /(?=.*[A-Z])/.test(password) ? 1 : 0)\r\n    const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : ( /(?=.*[a-z])/.test(password) ? 1 : 0)\r\n    const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : ( /(?=.*[0-9])/.test(password) ? 1 : 0)\r\n    const special = /(?=.*[!@#$%^&*]){2,}/.test(password) ? 2 : ( /(?=.*[!@#$%^&*])/.test(password) ? 1 : 0)\r\n    \r\n    const value = capital + lower + number + special\r\n\r\n    const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\r\n    let percentage = (value+(length/4))\r\n    if(percentage > 10) percentage = 10\r\n\r\n    return {\r\n        valid,\r\n        strong: percentage * 10,\r\n        name: value > 6 ? 'strong' : (value > 4 ? 'intermediate' : (valid ? 'weak' : 'poor')),\r\n        variant: percentage > 6 ? 'success' : (valid ? 'warning' : 'danger'),\r\n    } as IPasswordStrongResult\r\n    \r\n}","import React, { useState, useContext } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { Link, useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/client'\r\nimport { User, useUserDispatch, USER_LOGIN } from '../../../app/userContext';\r\nimport { Modal, Form, Button, Alert } from 'react-bootstrap'\r\nimport { isEmailValid } from './utils/utils';\r\n\r\nconst LOGIN_QL = gql`\r\n  mutation Login($email: String!, $pass: String!) {\r\n    login_v1(email: $email, password:$pass) {\r\n      token,\r\n      refreshToken,\r\n      user {\r\n        id\r\n        email,\r\n        verified,\r\n        roles {\r\n          name\r\n        }\r\n    }\r\n    } \r\n}\r\n`;\r\n\r\nexport const Login: React.FC = () => {\r\n    const [email, setEmail] = useState(localStorage.getItem('user.email') || '')\r\n    const [pass, setPass] = useState('')\r\n\r\n    const [invalidEmail, setInvalidEmail] = useState(false)\r\n    const [invalidPass, setInvalidPass] = useState(false)\r\n\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(history.location.search)\r\n    const path = query.get('path')\r\n    const role = query.get('role')\r\n    const defaultPath = process.env.REACT_APP_DEFAULT_USER_PATH || '/user/dashboard'\r\n    const dispatch = useUserDispatch()\r\n\r\n    const [login, { loading, data, error }] = useMutation(LOGIN_QL, { errorPolicy: 'none' });\r\n\r\n    const onLogin = async () => {\r\n        if(!isEmailValid(email)) {\r\n            return setInvalidEmail(true)\r\n        }\r\n\r\n        try {\r\n            const {data}:any = await login({ variables: { email, pass } })\r\n            dispatch({\r\n                type: USER_LOGIN,\r\n                userToken: data.login_v1 as User\r\n            })\r\n            // go to path in case user want to reach some page before login\r\n            // or go to default path\r\n            history.replace(path || defaultPath)\r\n        } catch(e) {\r\n            setInvalidEmail(true)\r\n            setInvalidPass(true)\r\n            setPass('')\r\n        }\r\n        \r\n    }\r\n\r\n    const onEmailChange = (event: any) => {\r\n        setEmail(event.target.value)\r\n        setInvalidEmail(false)\r\n        setInvalidPass(false)\r\n    }\r\n\r\n    const onPasswordChange = (event: any) => {\r\n        setPass(event.target.value)\r\n        setInvalidEmail(false)\r\n        setInvalidPass(false)\r\n    }\r\n\r\n    const onBackClick = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return (<>\r\n        <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n            <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 offset-md-2\">\r\n                            <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                                <div className=\"col-md-12 text-center\">\r\n                                    <h1>User Login</h1>\r\n                                    <p>We was missed you already</p>\r\n                                    {role && <Alert variant={'warning'}>You trying to reach part what is under registered user with <b>{role}</b> role protection. <Link to={'/'} onClick={onBackClick}>Please take me back</Link></Alert>}\r\n                                    {(!role && path) && <Alert variant={'warning'}>You trying to reach part what is under registered user protection. <Link to={'/'} onClick={onBackClick}>Please take me back</Link></Alert>}\r\n                                </div>\r\n                                <div className=\"clearfix\"></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3\">\r\n                        <Form name=\"contactForm\" id='contact_form' className=\"form-border\" >\r\n                            {!invalidPass && <h3>Login to your account</h3>}\r\n                            {invalidPass && <Alert variant={'danger'}>Email or password is not valid. Did You <Link to=\"/forgotten-password\">forgotten your password</Link>?</Alert>}\r\n                            {invalidEmail && (<Alert variant={\"danger\"}>Email is not in good shape...</Alert>)}\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter email\" onChange={onEmailChange} value={email} isInvalid={invalidEmail} />\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type='password' onChange={onPasswordChange} value={pass} isInvalid={invalidPass} />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your password with anyone else.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <div id='submit' className=\"pull-left\">\r\n                                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onLogin()}>Login</Button>}\r\n                                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n                                <div className=\"clearfix\"></div>\r\n\r\n                                <div className=\"spacer-single\"></div>\r\n\r\n                                <ul className=\"list s3\">\r\n                                    <li>Or login with:</li>\r\n                                    <li><a href={`${process.env.REACT_APP_HOST}/auth/github`}>GitHub</a></li>\r\n                                    <li><a href={`${process.env.REACT_APP_HOST}/auth/facebook`}>Facebook</a></li>\r\n                                    <li><a href={`${process.env.REACT_APP_HOST}/auth/google`}>Google</a></li>\r\n                                   \r\n                                </ul>\r\n\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </>\r\n    )\r\n\r\n}\r\n\r\nexport default Login","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { User, useUserDispatch, USER_LOGIN } from '../../../app/userContext';\r\nimport { isEmailValid } from \"../../../app/utils\";\r\n\r\nconst FORGOTTEN_PASSWORD_REQUEST_MUTATION = gql`\r\n  mutation forgottenPassword($email: String!) {\r\n    forgottenPassword_v1(email: $email) {\r\n      email,\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ForgottenPassword: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false)\r\n\r\n  const history = useHistory()\r\n  const dispatch = useUserDispatch()\r\n\r\n  const [checkResetEmail, { loading: loadingCheckResetEmail, data: checkResetEmailData, error: checkResetEmailError }] = useMutation(FORGOTTEN_PASSWORD_REQUEST_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [doForgottenPassword, { loading, data, error }] = useMutation(FORGOTTEN_PASSWORD_REQUEST_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n\r\n  const onRequestSend = async () => {\r\n    setEmailSent(false)\r\n    if(email && isEmailValid(email)){\r\n      setInvalidEmail(false)\r\n      try {\r\n        const { data } = await doForgottenPassword({ variables: { email } })\r\n        setEmailSent(true)\r\n      } catch (ex) {\r\n        console.log('onError', data)\r\n        setInvalidEmail(true)\r\n      }\r\n    } else {\r\n      setInvalidEmail(true)\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  const onEmailChange = (event: any) => {\r\n    setEmail(event.target.value);\r\n    setInvalidEmail(false);\r\n  };\r\n\r\n  if(emailSent) {\r\n    return (\r\n      <>\r\n      <Alert variant={\"success\"}>We sent to You instruction to email {email}. Check your mailbox (don't forget check spam as well)</Alert>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (<>\r\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <h1>Forgotten Password</h1>\r\n                  <p>Shortly You will be back</p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n              <Form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={onEmailChange}\r\n                    value={email}\r\n                    isInvalid={invalidEmail}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n          </Form.Text>\r\n                </Form.Group>\r\n\r\n                \r\n              </Form>\r\n\r\n              <div id='submit' className=\"pull-left\">\r\n                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRequestSend()}>Send Recovery Link</Button>}\r\n                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ForgottenPassword;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button, ProgressBar } from \"react-bootstrap\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { User, useUserDispatch, USER_LOGIN } from '../../../app/userContext';\r\nimport { isEmailValid, isPasswordValid, passwordStrong } from \"../../../app/utils\";\r\nimport _ from \"lodash\";\r\nimport PasswordComponent from \"./PasswordComponent\";\r\n\r\nconst FORGOTTEN_PASSWORD_CHECK_MUTATION = gql`\r\n  mutation forgottenPasswordCheck($token: String!) {\r\n    check: forgottenPasswordCheck_v1(token: $token) {\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nconst FORGOTTEN_PASSWORD_RESET_MUTATION = gql`\r\n  mutation forgottenPasswordReset($token: String!, $password: String!) {\r\n    reset: forgottenPasswordReset_v1(token: $token, password: $password) {\r\n      refreshToken\r\n      token\r\n      user {\r\n        roles{name}\r\n        id,\r\n        email,\r\n        verified\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ForgotenPasswordReset: React.FC<any> = ({match}) => {\r\n  const token = _.get(match, 'params.token')\r\n  const [password, setPassword] = useState(\"\");\r\n  const [copy, setCopy] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const dispatch = useUserDispatch()\r\n\r\n  const [doForgottenPasswordCheck, { loading: loadingForgottenPasswordCheck, data: dataForgottenPasswordCheck, error: errorForgottenPasswordCheck }] = useMutation(FORGOTTEN_PASSWORD_CHECK_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [doForgottenPasswordReset, { loading, data, error }] = useMutation(FORGOTTEN_PASSWORD_RESET_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  \r\n  const [invalidPass, setInvalidPass] = useState(false);\r\n  const [strong, setStrong] = useState(passwordStrong(''))\r\n  const [validPass, setValidPass] = useState(false);\r\n\r\n  const [invalidCopy, setInvalidCopy] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    const doCheck = async () => {\r\n      try{\r\n        await doForgottenPasswordCheck({ variables: {token}})\r\n      } catch(ex) {\r\n\r\n      } finally {\r\n      }\r\n      \r\n    }\r\n\r\n    doCheck()\r\n\r\n  }, [token, doForgottenPasswordCheck])\r\n\r\n  const onReset = async () => {\r\n    if(!strong.valid){\r\n      return\r\n    }\r\n\r\n    if (password !== copy) {\r\n      setInvalidCopy(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      const { data } = await doForgottenPasswordReset({ variables: { token, password } })\r\n      dispatch({\r\n        type: USER_LOGIN,\r\n        userToken: data.reset\r\n      })\r\n      history.replace('/user/projects')\r\n    } catch (ex) {\r\n        console.log('onError', data)\r\n        \r\n      }\r\n  \r\n  };\r\n\r\n  const onPasswordChange = (event: any) => {\r\n    const pass = event.target.value as string\r\n\r\n    setPassword(pass);\r\n    const valid = isPasswordValid(pass)\r\n    setInvalidPass(!valid);\r\n    setStrong(passwordStrong(pass))\r\n  };\r\n\r\n  const onCopyChange = (event: any) => {\r\n    const c = event.target.value\r\n    setCopy(c)\r\n    setInvalidPass(false)\r\n\r\n    if (c == password) {\r\n      setInvalidCopy(false)\r\n    }\r\n  };\r\n\r\n  if(loadingForgottenPasswordCheck){\r\n    return (<Alert variant={\"success\"}>Checking token</Alert>)\r\n  } else if ( dataForgottenPasswordCheck && dataForgottenPasswordCheck.check && dataForgottenPasswordCheck.check.status === 'valid') {\r\n    return (<>\r\n      <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n        <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 offset-md-2\">\r\n                <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <h1>User Password Reset</h1>\r\n                    <p>You will be back soon</p>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  \r\n      <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n  \r\n  \r\n                <Form>\r\n                {/* {invalidPass && (<Alert variant={\"danger\"}>The password have to contain capital letter,lower letter, a number and must be 6-16 characters long</Alert>)}   */}\r\n                {invalidCopy && (<Alert variant={\"danger\"}>The retyped password is not the same</Alert>)}\r\n                <PasswordComponent password={password} onPasswordChange={onPasswordChange} strongPassword={strong} />\r\n  \r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Re-Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Retype Password\"\r\n                      onChange={onCopyChange}\r\n                      value={copy}\r\n                      isInvalid={invalidCopy}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n  \r\n                <div id='submit' className=\"pull-left\">\r\n                  {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onReset()} disabled={!strong.valid}>Reset password</Button>}\r\n                  {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n  \r\n                  <div className=\"clearfix\"></div>\r\n  \r\n  \r\n                </div>\r\n  \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n    );\r\n  } else {\r\n    return (<Alert variant={\"danger\"}>The <b>{token}</b> is not valid or already used</Alert>)\r\n  }\r\n\r\n  \r\n};\r\n\r\nexport default ForgotenPasswordReset;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { User, useUserDispatch, USER_LOGIN } from '../../../app/userContext';\r\nimport * as _ from 'lodash'\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($verifyToken: String!) {\r\n    verifyEmail_v1(verifyToken: $verifyToken) {\r\n      refreshToken\r\n      token\r\n      user {\r\n        roles{name}\r\n        id,\r\n        email,\r\n        verified\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VerifyUser: React.FC<any> = ({match}) => {\r\n  const verifyToken = _.get(match, 'params.verifyToken')\r\n  const [verified, setVerified] = useState(false);\r\n\r\n  const history = useHistory()\r\n  const dispatch = useUserDispatch()\r\n\r\n  const [verify, { loading: verifying, data, error: verifiedError }] = useMutation(VERIFY_EMAIL_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const doVerifyUser = async () => {\r\n    try {\r\n      const { data } = await verify({ variables: { verifyToken } })\r\n      dispatch({\r\n        type: USER_LOGIN,\r\n        userToken: data.verifyEmail_v1\r\n      })\r\n      setVerified(true)\r\n      localStorage.setItem('user.verifyToken', verifyToken)\r\n      setTimeout(()=>{\r\n        history.replace('/user/projects')\r\n      }, 2000)\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n    }\r\n  \r\n  };\r\n\r\n  const onVerifyUser = () => {\r\n    const previouslyVerified = localStorage.getItem('user.verifyToken')\r\n    const userVerified = localStorage.getItem('user.verified') == 'true'\r\n\r\n    // user probably comming with the same link\r\n    // what was for his first verified\r\n    if(userVerified && previouslyVerified == verifyToken) {\r\n      history.replace('/user/projects')\r\n    } else {\r\n      doVerifyUser()\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(()=>{\r\n   if(verifyToken){\r\n    onVerifyUser()\r\n   }\r\n  }, [verifyToken])\r\n  \r\n\r\n  return (<section>\r\n    <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n    <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              {verified ? (<div className=\"alert alert-success\" role=\"alert\">Your account was verified <Button>Start creating</Button></div>): null} \r\n              {verifying ? (<div className=\"alert alert-dark\" role=\"alert\">Your accont is verifing...</div>): null}\r\n              {!verifyToken || verifiedError ? ( <div className=\"alert alert-dark\" role=\"alert\">The code is invalid or already applyed</div>): null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>)\r\n};\r\n\r\nexport default VerifyUser;\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { User, USER_LOGIN, useUserDispatch } from '../../../../app/userContext'\r\nimport _ from 'lodash'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport const tokenFromFacebookCode = async (type:string, code: string) => {\r\n    return axios.get(`${process.env.REACT_APP_HOST}/auth/${type}/callback?code=${code}`)\r\n}\r\n\r\nexport const GithubCallback: React.FC<{type: string}> = ({type}) => {\r\n    const location = useLocation()\r\n    const codeRaw = _.get(location, 'search', '').split('?code=')\r\n    const code = codeRaw.length > 1 ? codeRaw[1] : ''\r\n\r\n\r\n    const history = useHistory()\r\n    const dispatch = useUserDispatch()\r\n\r\n    const [error, setError] = useState<string>()\r\n\r\n    const showError = (errorMessage:string) => {\r\n        setError(errorMessage)\r\n        setTimeout(()=>{\r\n            history.replace('/login')\r\n        }, 4000)\r\n    }\r\n    useEffect(()=>{\r\n        const request = async () => {\r\n            try {\r\n                const data = await tokenFromFacebookCode(type, code)\r\n                dispatch({\r\n                    type: USER_LOGIN,\r\n                    userToken: data.data as User\r\n                })\r\n                history.replace('/user/projects')\r\n            } catch(ex) {\r\n                const response = JSON.parse(_.get(ex, 'request.response', '{}'))\r\n                showError(response.error?.message || ex.message)\r\n            }\r\n            \r\n           \r\n        }\r\n\r\n        if(code) request()\r\n        else showError('User denied')\r\n    }, [location])\r\n\r\n    return (<>\r\n        {error && <Alert variant={'danger'}>{type} login isn't work due \"{error}\" You will be redirect back to <Link to=\"/login\">Login</Link></Alert>}\r\n    </>)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import React from 'react';\nimport logo from '../../../logo.svg';\n// import { Counter } from './features/counter/Counter';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {/* <Counter /> */}\n        <p>\n          This page is public and accesible for all visitors / users \n          Edit <code>src/containers/public/Home/Home.tsx</code> and save to reload.\n        </p>\n        <span>\n          <span>Learn </span>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            React\n          </a>\n          <span>, </span>\n          <a\n            className=\"App-link\"\n            href=\"https://redux.js.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Redux\n          </a>\n          <span>, </span>\n          <a\n            className=\"App-link\"\n            href=\"https://redux-toolkit.js.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Redux Toolkit\n          </a>\n          ,<span> and </span>\n          <a\n            className=\"App-link\"\n            href=\"https://react-redux.js.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            React Redux\n          </a>\n        </span>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nconst UserHeader = ({user, onLogout}:any) =>  ( <div className=\"header-light transparent scroll-light container\">\r\n<div className=\"row\">\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      Menu\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n\r\n  </Dropdown>\r\n\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      Admin\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/admin/users\">Users</Dropdown.Item>\r\n      <Dropdown.Item href=\"/admin/roles\">Roles</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n    \r\n  </Dropdown>\r\n  </div>\r\n  <div className=\"header-text col-md-8\">\r\n    <div>\r\n      This Header only for loged user with admin role\r\n    </div>\r\n  </div>\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      User\r\n    </Dropdown.Toggle>\r\n\r\n\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\"><Link to=\"/user/dashboard\" >User Dashboard</Link></Dropdown.Item>\r\n      <Dropdown.Item href=\"/\"><Link className=\"\" to=\"/\" onClick={onLogout}>Logout</Link></Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  </div>\r\n</div>\r\n</div>)\r\n\r\nexport default UserHeader","import React from 'react'\r\nimport { Button, Dropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Header.css'\r\n\r\nexport const PublicHeader = () => ( <div className=\"header-light transparent scroll-light container\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Menu\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      </div>\r\n      <div className=\"header-text col-md-8\">\r\n        <div>\r\n         This is public Header\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-2\">\r\n        <Link className=\"\" to=\"/login\">Login</Link> or <Link className=\"\" to=\"/register\">Register</Link>\r\n      </div>\r\n    </div>\r\n  </div>)\r\n\r\n\r\n\r\nexport default PublicHeader","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nconst UserHeader = ({user, onLogout}:any) =>  ( <div className=\"header-light transparent scroll-light container\">\r\n<div className=\"row\">\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      Menu\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  </div>\r\n  <div className=\"header-text col-md-8\">\r\n    <div>\r\n      This Header only for anybody who is logged in\r\n    </div>\r\n  </div>\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      User\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\"><Link to=\"/user/dashboard\" >User Dashboard</Link></Dropdown.Item>\r\n      <Dropdown.Item href=\"/\"><Link className=\"\" to=\"/\" onClick={onLogout}>Logout</Link></Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  </div>\r\n</div>\r\n</div>)\r\n\r\nexport default UserHeader","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useUserState, useUserDispatch, USER_INIT, USER_LOGOUT } from '../../app/userContext';\r\nimport AdminHeader from './AdminHeader';\r\nimport PublicHeader  from './PublicHeader';\r\nimport UserHeader from './UserHeader'\r\n\r\nexport const Header:React.FC = () => {\r\n  const user = useUserState()\r\n  const userDispatch = useUserDispatch()\r\n\r\n  const onLogout = () => {\r\n    userDispatch({ type: USER_LOGOUT })\r\n  }\r\n\r\n  if (user && user.token) {\r\n    if(user.roles.indexOf('admin') !== -1) return (<AdminHeader user={user} onLogout={onLogout} />)\r\n    else return (<UserHeader user={user} onLogout={onLogout} />)\r\n  }\r\n\r\n  return <PublicHeader />\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nexport function UserDashboard() {\r\n    return (\r\n      <div>\r\n        <h2>User Dashboard</h2>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  export default UserDashboard","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { useUserState } from '../../app/userContext'\r\n\r\nexport const ProtectRoute:React.FC<{path:string, role?:string}> = ({path, role, children}) => {\r\n    const user = useUserState()\r\n\r\n    if(role && user.roles.indexOf(role) === -1){\r\n        return (<Redirect to={`/login?path=${path}&role=${role}`} />)\r\n    }\r\n\r\n    if(!user.token) {\r\n        return (<Redirect to={`/login?path=${path}`} />)\r\n    }\r\n\r\n    return (<>{children}</>)\r\n}\r\n\r\nexport default ProtectRoute","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap'\r\nimport './row.css'\r\n\r\n\r\nexport interface IFilteredFieldDesc {\r\n  name: string\r\n  title?: string\r\n  component?: React.FC<any>\r\n}\r\n\r\nexport type IFilteredField = IFilteredFieldDesc | string\r\n\r\nexport interface IListRowParams {\r\n  item: any\r\n  field: IFilteredField\r\n}\r\n\r\nconst getElementFromField = (item: any, field: IFilteredField) => {\r\n  const fieldDesc = field as IFilteredFieldDesc\r\n\r\n  const names = fieldDesc.name ? fieldDesc.name.split('.') : (field as string).split('.')\r\n  const element = item[names[0]]\r\n\r\n  return {element, name: names[0], names}\r\n}\r\n\r\nexport const ListRowItem: React.FC<IListRowParams> = ({ item, field }) => {\r\n  const {element, name, names} = getElementFromField(item, field)\r\n\r\n  if(!element) {\r\n    return (<>ERR NOT EXIST:{name}</>)\r\n  }\r\n\r\n  if((field as IFilteredFieldDesc).component) {\r\n    const component = (field as IFilteredFieldDesc).component\r\n    return (<>{component && component({value:element, names, item})}</>)\r\n  }\r\n\r\n  if(element.substr && element.length > 50) {\r\n    return (<>{element.substr(0, 47)}...</>)\r\n  }\r\n\r\n  if(element.push && element.reduce && names.length > 1) {\r\n    return (<>{(element as any[]).reduce((p, e)=>p + e[names[1]], '')}</>)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {element}\r\n    </>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap'\r\nimport './row.css'\r\nimport { ListRowItem, IFilteredField } from \"./row-item\";\r\n\r\nexport interface IListRowItem {\r\n  id: string;\r\n  name: string;\r\n  user: any\r\n}\r\n\r\nexport interface IListRowParams {\r\n  name: string;\r\n  item: any;\r\n  fields?: IFilteredField[]\r\n  onDelete: (obj: any) => void\r\n  showDelete?: boolean\r\n}\r\nexport const ListRow: React.FC<IListRowParams> = ({ item, onDelete, name, fields=['id'] , showDelete=false}) => {\r\n  return (\r\n    <tr className=\"row1\">\r\n      \r\n      <td className=\"id\"><Link to={`/user/${name.toLowerCase()}/${item.id}`}>{item.id}</Link></td>\r\n      {fields.map(field=>(field !=='id' && <td><ListRowItem item={item} field={field} /></td>))}\r\n      {item.user && (<td>{item.user.email}</td>)}\r\n      \r\n      {showDelete && <td className=\"right\">\r\n        <Button variant=\"danger\" size=\"sm\" onClick={()=>{onDelete(item)}}>delete</Button>\r\n      </td>}\r\n    </tr>\r\n  );\r\n};\r\n\r\n","\r\nimport React from \"react\";\r\n\r\nexport const Loading = ({what = ''}) => {\r\n    return (<div>{`Loading ${what}... `}</div>)\r\n}\r\n\r\nexport default Loading","import React, { useState, useContext } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery, useLazyQuery } from '@apollo/client'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { User, useUserDispatch, USER_LOGIN } from '../../app/userContext';\r\nimport { Modal, Form, Button, Alert } from 'react-bootstrap'\r\n\r\nexport interface IDeleteModalParams { \r\n    show: boolean, \r\n    onHide: () => void, \r\n    onDelete: (deleteObject: any) => void,\r\n    category: string,\r\n    deleteObject? : any\r\n    deleting? : boolean\r\n}\r\n\r\nexport const DeleteModal: React.FC<IDeleteModalParams> = ({ show, onHide, onDelete, category, deleteObject, deleting }) => {\r\n\r\n    const onDeleteAction = () => {\r\n        if(!deleting){\r\n            onDelete(deleteObject)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={onHide}>\r\n                <Modal.Header closeButton>\r\n                    <div>\r\n                        <Modal.Title>Delete {'>>'} {deleteObject && deleteObject.name}  {'<<'}</Modal.Title>\r\n                    </div>\r\n                    \r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    {!deleting ? (<p>Are you sure, you want delete {category} item with name <b>'{deleteObject && deleteObject.name}'</b> and id <i>'{deleteObject && deleteObject.id}'</i></p>) : \r\n                                (<p>Deleting {category} item with name '{deleteObject && deleteObject.name}' and id '{deleteObject && deleteObject.id}' ...</p>) }\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button disabled={deleting} variant=\"danger\" type=\"submit\" onClick={onDeleteAction}>Delete</Button>\r\n                    <Button disabled={deleting} variant=\"primary\" onClick={onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteModal","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport const Unauthorized = ({where = ''}) => {\r\n    return (<Alert variant={'danger'}>{`Unauthorized ${where} access`}</Alert>)\r\n}\r\n\r\nexport default Unauthorized","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Table as BTable, Button } from 'react-bootstrap'\r\n\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { ListRow } from './row';\r\nimport Loading from '../common/Loading';\r\nimport DeleteModal from '../common/DeleteModal';\r\nimport Unauthorized from '../common/Unauthorized';\r\nimport { DocumentNode } from 'graphql';\r\nimport { IFilteredField } from './row-item';\r\n\r\nexport interface IFilterWithParams {\r\n  filter?: string\r\n  params?: string\r\n}\r\n\r\nexport interface ITableQueries {\r\n  ADMIN_LIST_QUERY: DocumentNode\r\n  USER_LIST_QUERY: DocumentNode\r\n  DELETE_MUTATION: DocumentNode\r\n}\r\n\r\nexport interface IProjectList {\r\n    userId?: string\r\n    adminMode?: boolean\r\n    filter: any\r\n    queries: ITableQueries\r\n    fields?: IFilteredField[]\r\n    name: string\r\n}\r\n\r\nexport const Table : React.FC<IProjectList> = ({filter, name, adminMode = false, queries, fields}) => {\r\n  const [unauthorized, setUnauthorized] = useState(false)\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\r\n  const [deleteObject, setDeleteObject] = useState(null)\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\r\n  const [deletingOnDeleteDialog, setDeletingOnDeleteDialog] = useState(false)\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [data, setData] = useState<any>([])\r\n  const [error, setError] = useState<any>()\r\n\r\n  const { refetch: userRefetch, loading: userLoading } = useQuery(adminMode? queries.ADMIN_LIST_QUERY : queries.USER_LIST_QUERY, {\r\n    onError: (e) => {\r\n      console.log('onError >>> ', e.message)\r\n      if(e.message == 'GraphQL error: Unauhorized'){\r\n        setUnauthorized(true)\r\n      } else {\r\n        setError(e)\r\n      }\r\n    }, onCompleted: (d) => {\r\n      console.log('user: onCompleted', d)\r\n      setLoading(false)\r\n\r\n      const dataFields = Object.getOwnPropertyNames(d)\r\n      if(dataFields.length > 0 && d[dataFields[0]].length > 0){\r\n        setData(d[dataFields[0]])\r\n      } else {\r\n        setData([])\r\n      }\r\n      \r\n    },\r\n    variables: {filter}\r\n  });\r\n\r\n\r\n  \r\n\r\n    const [\r\n      deleteProjectMutation,\r\n      { loading: deleteLoading, error: deleteError }\r\n    ] = useMutation(queries.DELETE_MUTATION, {\r\n      errorPolicy: \"none\",\r\n      onCompleted: (data: any) => {\r\n        console.log(\"DELETE\", data.deleteProject);\r\n        onHideDidaloDelete()\r\n        userRefetch()\r\n      },\r\n      onError: (e) => {\r\n        console.log('onError >>> ', e.message)\r\n        if(e.message == 'GraphQL error: Unauhorized'){\r\n          setUnauthorized(true)\r\n        }\r\n      },\r\n    });\r\n\r\n    const onHideDidaloDelete = () => {\r\n      setShowDeleteDialog(false)\r\n      setDeleteObject(null)\r\n    }\r\n\r\n    const onDelete = (obj:any) => {\r\n      setDeletingOnDeleteDialog(false)\r\n      setShowDeleteDialog(true)\r\n      setDeleteObject(obj)\r\n    }\r\n\r\n    const doDelete = (deleteObject: any) => {\r\n      setDeletingOnDeleteDialog(true)\r\n      deleteProjectMutation({\r\n        variables: {\r\n          id: deleteObject.id\r\n        }\r\n      });\r\n    }\r\n    \r\n\r\n    if(unauthorized) {\r\n      return (<Unauthorized where={'projects'} />)\r\n    }\r\n    if (userLoading) return (<Loading what={'projects'} />);\r\n\r\n    return (\r\n        <div>\r\n            \r\n            {error && (<div>{`Error! ${error.message}`}</div>)}\r\n            \r\n            <BTable responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>Id</th>\r\n                  {fields?.map(f => (f!=='id' && <th>{(f as any).name ? (f as any).name : f}</th>))}\r\n                  {adminMode && <th>User</th>}\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {\r\n                data.length && data.map((projectItem:any)=>(<ListRow name={name} item={projectItem} onDelete={onDelete} fields={fields} showDelete={adminMode}/>))\r\n              }\r\n              </tbody>\r\n            \r\n            </BTable>\r\n            \r\n            <DeleteModal \r\n                  show={showDeleteDialog} \r\n                  onHide={onHideDidaloDelete}\r\n                  onDelete={doDelete}\r\n                  category={'project'}\r\n                  deleteObject={deleteObject}\r\n                  deleting={deletingOnDeleteDialog}\r\n                  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import React, {useState, useEffect, useCallback} from 'react'\r\nimport { Col, Form, Alert, Button, InputGroup, DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport './filter-item.css'\r\n\r\nconst basicOptionsName = {\r\n    contains : 'contains',\r\n    not_contains : 'not contains',\r\n    starts_with : 'starts with',\r\n    not_starts_with : 'not starts with',\r\n    ends_with : 'ends with',\r\n    not_ends_with : 'not ends with',\r\n    isEmpty : 'is empty',\r\n}\r\n\r\ntype basicOptionsNameType = 'contains' | 'not_contains' | 'starts_with' | 'not_starts_with' | 'ends_with' | 'not_ends_with' | 'isEmpty'\r\n\r\n\r\n\r\nexport interface IFilterItemParam {\r\n    fields: any[]\r\n    onChange: (filter: string | null) => void\r\n}\r\n\r\n  \r\n\r\nexport const FilterItem: React.FC<IFilterItemParam> = ({fields, onChange}) => {\r\n    const [fieldSelected, setFieldSelected] = useState(fields[0])\r\n    const [optionSelected, setOptionSelected] = useState('contains')\r\n    const [filterText, setFilterText] = useState('')\r\n    const [filter, setFilter] = useState<string|null>('null')\r\n\r\n    const onFieldChange = (field:any) => {\r\n        console.log('onFieldChange', field)\r\n        setFieldSelected(field)\r\n        processFilter(field, optionSelected, filterText)\r\n    }\r\n\r\n    const onOptionChange = (option:any) => {\r\n        console.log('onOptionChange', option)\r\n        setOptionSelected(option)\r\n        processFilter(fieldSelected, option, filterText)\r\n    }\r\n\r\n    const onFilterChange = (e:any) => {\r\n        const text = e.target.value\r\n        console.log('onFilterChange', e, text)\r\n        setFilterText(text)\r\n        processFilter(fieldSelected, optionSelected, text)\r\n    }\r\n\r\n    const doFilter = useCallback((f: string | null) => {\r\n        if(filter != f){\r\n            console.log('useFilter>>>', f)\r\n            setFilter(f)\r\n            onChange(f)\r\n        }\r\n    }, [filter, onChange, setFilter])\r\n\r\n    const processFilter = useCallback((field, option, text) => {\r\n        if(!text && option != 'isEmpty') {\r\n            doFilter(null)\r\n            return\r\n        }\r\n\r\n        const f = {} as any\r\n        f[`${field}_${option}`] = text\r\n        doFilter(f)\r\n\r\n    }, [doFilter] )\r\n\r\n    const gc = (o:any) => {\r\n        const o2 = o\r\n        return () => {\r\n            onFieldChange(o2)\r\n        }\r\n    }\r\n\r\n    const go = (o:any) => {\r\n        const o2 = o\r\n        return () => {onOptionChange(o2);}\r\n    }\r\n\r\n\r\n    return (\r\n        <InputGroup className=\"mb-3\">\r\n            <DropdownButton\r\n                className=\"field-option\"\r\n                as={InputGroup.Prepend}\r\n                variant=\"success\"\r\n                title={fieldSelected}\r\n                id=\"input-group-dropdown-0\" >\r\n                    {fields.map((o)=> (<Dropdown.Item key={o} onClick={gc(o)}>{o.toString()}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            <DropdownButton\r\n                className=\"select-option\"\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-link\"\r\n                title={basicOptionsName[optionSelected as basicOptionsNameType]}\r\n                id=\"input-group-dropdown-1\" >\r\n                    {Object.getOwnPropertyNames(basicOptionsName).map((o)=> (<Dropdown.Item key={o} onClick={go(o)}>{basicOptionsName[o as basicOptionsNameType]}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            <Form.Control value={filterText} onChange={onFilterChange}/>\r\n        </InputGroup>)\r\n\r\n}\r\n\r\nexport default FilterItem","import React, {useState, useEffect, useCallback} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport Table, {ITableQueries} from './table'\r\nimport FilterItem from './filter-item'\r\nimport {Navbar, Button} from 'react-bootstrap'\r\nimport './filtered-list.css'\r\nimport { IFilteredField } from './row-item'\r\n\r\n\r\n\r\nexport interface IProjectFilterList {\r\n    name: string,\r\n    userId?: string \r\n    adminMode?: boolean\r\n    queries: ITableQueries\r\n    fields: IFilteredField[]\r\n}\r\n\r\nconst createFilter = () => {\r\n    let obj:any = []\r\n    obj.name = 'AND'\r\n    return {AND: obj}\r\n}\r\n\r\nconst addAnd = (node:any, filter:any) => {\r\n\r\n    let obj:any = filter\r\n\r\n    if(node.name != 'AND'){\r\n        obj = [obj]\r\n        obj.name = 'AND'\r\n    }\r\n\r\n    node.push(obj)\r\n}\r\n\r\nconst filterDestructNode = (node: any) => {\r\n    let filter = ''\r\n\r\n    for(const n of node) {\r\n        if(n.name && n.length > 0) {\r\n            filter += `,${filterDestructNode(n)}` \r\n        } else {\r\n            filter += `,{${n.filter}}`\r\n        }\r\n    }\r\n\r\n    return `{${node.name}:[${filter.substr(1)}]}`\r\n}\r\n\r\nconst filterDestruct = (filter: any) => {\r\n    let fo = {\r\n        filter: '',\r\n        params: '',\r\n    }\r\n\r\n    fo.filter = filter.AND.length > 0 ? `(filter: ${filterDestructNode(filter.AND)})` : ''\r\n    fo.params = fo.params.length> 2 ? `(${fo.params.substr(1)})` : ''\r\n\r\n    return fo\r\n}\r\n\r\n\r\nexport const FilteredList:React.FC<IProjectFilterList> = ({name, userId, adminMode=false, queries, fields}) => {\r\n\r\n    const [filter, setFilter] = useState(adminMode ? createFilter() : null)\r\n    const history = useHistory()\r\n\r\n    // console.log(filter, listFilter)\r\n    const createDefaultFilter = (userId? : string) => {\r\n        const defaultFilter = createFilter()\r\n        \r\n        if(userId){\r\n            addAnd(defaultFilter.AND, {user_every:{id:userId}})\r\n        }\r\n        \r\n        return defaultFilter\r\n    }\r\n\r\n    const processFilter = (filter: any) => {\r\n        const filterDestructed = filterDestruct(filter)\r\n        \r\n        console.log('processFilter', {filter, filterDestructed})\r\n\r\n        setFilter(filter)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const defaultFilter = createDefaultFilter(userId)\r\n        processFilter(defaultFilter)\r\n        \r\n    }, [userId])\r\n\r\n\r\n    const onFilterChange = useCallback((f: string | null) => {\r\n        const defaultFilter = createDefaultFilter(userId)\r\n        \r\n        if(f) {\r\n            addAnd(defaultFilter.AND,f)\r\n        }\r\n        \r\n        processFilter(defaultFilter)\r\n\r\n    }, [userId])\r\n\r\n    const onCreateNew = () => {\r\n        history.push('/user/' + name.toLowerCase() + '/create' )\r\n    }\r\n\r\n    // if is not adminMode, \r\n    // the useEffect will update filter with user after render\r\n    // but in render is already called the query\r\n    // but the query will call without properly setuped filter and return unauthorized\r\n    if(!adminMode && !filter){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <section>\r\n        <h1>{name}</h1>\r\n            <div className=\"row-head\">\r\n                \r\n                <FilterItem fields={fields} onChange={onFilterChange} />\r\n                <div>\r\n                \r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"row-table\">\r\n           \r\n            <Table name={name} filter={filter} queries={queries} adminMode={adminMode} fields={fields} />\r\n            <Button onClick={onCreateNew}>Create New</Button>\r\n            </div>\r\n            \r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilteredList","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport { BaseForm, TBaseForm } from \"./Form\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport * as _ from 'lodash'\r\nimport { Alert } from 'react-bootstrap'\r\nimport Unauthorized from '../common/Unauthorized'\r\nimport Loading from '../common/Loading'\r\nimport { TField, TControlField } from \"./Control\";\r\n\r\nexport const getDataFromRaw = (rawData: any) => {\r\n  const rawName = Object.keys(rawData)[0]\r\n  return rawData[rawName]\r\n}\r\n\r\nexport type TBaseEditUpdateCacheFn = (cache: any, data: any) => void\r\nexport type TBaseEdiRenameErrorFn = (error: string) => string\r\nexport type TBaseEdiOnCompletedFn = (data: any) => void\r\n\r\nexport type TBaseEdit = Pick<TBaseForm, 'fields'> & {\r\n  id: string\r\n  name: string\r\n  query: any\r\n  onUpdated? : (data:any) => void\r\n  updateCache?: TBaseEditUpdateCacheFn\r\n  renameError?: TBaseEdiRenameErrorFn\r\n  onCompleted?: TBaseEdiOnCompletedFn\r\n}\r\n\r\nexport const BaseEdit:React.FC<TBaseEdit> = ({id: externId, query, name, fields, onUpdated, updateCache, renameError, onCompleted}) => {\r\n  const [localId, setLocalId] = useState(externId);\r\n  const [unauthorized, setUnauthorized] = useState(false);\r\n  const [errors, setErrors] = useState<string[]|null>([])\r\n\r\n  const [model, setModel] = useState({\r\n\r\n  });\r\n\r\n  const handleError = (incommingError:{message: string}) => {\r\n    let incomingErrors = incommingError.message.split('\\n')\r\n    if(renameError) {\r\n      incomingErrors = incomingErrors.map(error=>renameError(error))\r\n    }\r\n    setErrors(incomingErrors)\r\n  }\r\n\r\n  const updateDataFromLoaded = (loadedDataRaw: any) => {\r\n    if(!loadedDataRaw){\r\n      return\r\n    }\r\n    \r\n    const loadedData = getDataFromRaw(loadedDataRaw)\r\n\r\n    if(loadedData){\r\n      const np = fields.reduce((o:any, field: TField)=> {\r\n        const fieldName = (field as TControlField).name ? (field as TControlField).name : field as string\r\n        o[fieldName] = loadedData[fieldName]\r\n        return o\r\n      }, {})\r\n\r\n      setModel(np)\r\n    } else {\r\n      setUnauthorized(true)\r\n    }\r\n\r\n    if(onUpdated) onUpdated(loadedData)\r\n  }\r\n\r\n  const skipLoading = !externId\r\n  const { loading, error } = useQuery(query.QUERY, {\r\n    variables: {id: externId},\r\n    skip: skipLoading,\r\n    onCompleted: (loadedDataRaw: any) =>{\r\n      console.log('loadedDataRaw', loadedDataRaw, skipLoading)\r\n      updateDataFromLoaded(loadedDataRaw)\r\n      \r\n    }, onError: (e) => {\r\n      console.log('onError >>> ', e.message)\r\n      if(e.message == 'GraphQL error: Unauhorized'){\r\n        setUnauthorized(true)\r\n      }\r\n      setModel({name:'', models: ''})\r\n      \r\n    }\r\n  });\r\n\r\n  const [\r\n    createProjectMutation,\r\n    { loading: createLoading, data: createData, error: createError }\r\n  ] = useMutation(query.CREATE_MUTATION, {\r\n    errorPolicy: \"none\",\r\n    onCompleted: (raw: any) => {\r\n      const data = getDataFromRaw(raw)\r\n      console.log(\"CREATED\", raw, data.id);\r\n      setLocalId(data.id);\r\n\r\n      setErrors(null)\r\n\r\n      if(onCompleted) onCompleted(raw)\r\n      if(onUpdated) onUpdated(raw)\r\n      // updateDataFromLoaded(raw)\r\n    },\r\n    update: updateCache,\r\n    onError: handleError\r\n  });\r\n\r\n  const [updateProjectMutation, { loading:updateLoading, data: updateData, error:updateError }] = useMutation(\r\n    query.UPDATE_MUTATION,\r\n    {\r\n      errorPolicy: \"none\",\r\n      onCompleted: (data: any) => { \r\n        \r\n        const raw =  getDataFromRaw(data)\r\n        console.log(\"UPDATED\", data, raw);\r\n        setLocalId(raw.id);\r\n\r\n        setErrors(null)\r\n\r\n        if(onCompleted) onCompleted(raw)\r\n        if(onUpdated) onUpdated(raw)\r\n        // updateDataFromLoaded(raw)\r\n      },\r\n      update: updateCache,\r\n      onError: handleError\r\n    }\r\n  );\r\n\r\n  const onUpdate = useCallback((model: any) => {\r\n    console.log('onUpdate >>> ', localId, model)\r\n    if(localId){\r\n        updateProjectMutation({\r\n            variables: {\r\n              id:localId,\r\n              ...model\r\n            }\r\n          });\r\n    } else {\r\n        createProjectMutation({\r\n            variables: {\r\n              userId: localStorage.getItem(\"user.id\"),\r\n              ...model\r\n            }\r\n          });\r\n    }\r\n    \r\n  }, [localId]);\r\n\r\n  if(unauthorized) {\r\n    return (<Unauthorized where={`${name} edit`} />)\r\n  }\r\n\r\n  if(loading) {\r\n    return (<Loading what={name}/>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {externId ? <h1>{name} Edit ({externId})</h1> : <h1>{name} create</h1>}\r\n      {error && <Alert variant={'danger'}>`${error.message}`</Alert>}\r\n      {errors && errors.length > 0 && errors.map((e)=>(<Alert variant={'danger'}>{e}</Alert>))}\r\n      <BaseForm model={model} doUpdate={onUpdate} edit={Boolean(localId)} fields={fields} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BaseEdit\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DropdownButton, Dropdown, Form } from \"react-bootstrap\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { getDataFromRaw } from \"../Editor/Edit\";\r\n\r\nexport const ConnectBase: React.FC<{value:any, names?:any, gql: any, item: any}> = ({value, names, gql, item}) => {\r\n    const element = value\r\n    const name = names.length>1 && names[1]\r\n    const elementTitle = element.push && element.reduce && names.length > 1 ? (element as any[]).reduce((p, e)=>p + `, ${e[name]}`, '').substr(2) : element\r\n  \r\n    const [title, setTitle] = useState(elementTitle)\r\n    const [data, setData] = useState<any[]>([])\r\n  \r\n    const { refetch: userRefetch, loading: userLoading } = useQuery(gql.QUERY, {\r\n      onError: (e) => {\r\n        console.log('ConnectBase:onError >>> ', e.message)\r\n        if(e.message == 'GraphQL error: Unauhorized'){\r\n          // setUnauthorized(true)\r\n        } else {\r\n          // setError(e)\r\n        }\r\n      }, onCompleted: (iraw) => {\r\n        console.log('user: onCompleted', iraw)\r\n        // setLoading(false)\r\n  \r\n        const dataFields = Object.getOwnPropertyNames(iraw)\r\n        if(dataFields.length > 0 && iraw[dataFields[0]].length > 0){\r\n          const raw = iraw[dataFields[0]]\r\n  \r\n          const final = raw.map((r:any)=>{\r\n            return {\r\n              id: r.id,\r\n              checked: title.indexOf(r[name]) !== -1,\r\n              label: r[name]\r\n            }\r\n          })\r\n  \r\n          setData(final)\r\n        } else {\r\n          setData([])\r\n        }\r\n        \r\n      },\r\n    });\r\n  \r\n    const [\r\n      addMutation,\r\n      { loading: addMutaionLoading, data: addMutationData, error: addMutationError }\r\n    ] = useMutation(gql.ADD, {\r\n      errorPolicy: \"none\",\r\n      onCompleted: (raw: any) => {\r\n        const data = getDataFromRaw(raw)\r\n        console.log(\"ADDED\", raw, data.id);\r\n      },\r\n      onError: () => {}\r\n    });\r\n  \r\n    const [\r\n      removeMutation,\r\n      { loading: removeMutaionLoading, data: removeMutationData, error: removeMutationError }\r\n    ] = useMutation(gql.REMOVE, {\r\n      errorPolicy: \"none\",\r\n      onCompleted: (raw: any) => {\r\n        const data = getDataFromRaw(raw)\r\n        console.log(\"REMOVE\", raw, data.id);\r\n      },\r\n      onError: () => {}\r\n    });\r\n  \r\n    const onChecked = (value:any) => {\r\n      const updated = data.map((d:any)=>{\r\n        if(d.label === value.label) {\r\n          d.checked = !d.checked\r\n        }\r\n        return {...d}\r\n      })\r\n  \r\n      const updateTitle = (updated as any[]).reduce((p, e) => {\r\n        if(e.checked) return `${p}, ${e.label}`\r\n        else return p\r\n      }, '').substr(1)\r\n  \r\n      console.log('onChecked:', {updated, value, updateTitle})\r\n  \r\n      if(value.checked){\r\n        addMutation({\r\n          variables: {\r\n            id1: value.id,\r\n            id2: item.id\r\n          }\r\n        });\r\n      } else {\r\n        removeMutation({\r\n          variables: {\r\n            id1: value.id,\r\n            id2: item.id\r\n          }\r\n        });\r\n      }\r\n      \r\n  \r\n      setData(updated)\r\n      setTitle(updateTitle)\r\n    }\r\n    \r\n    // if(element.push && element.reduce && names.length > 1) {\r\n    //   return (<>ahoj: {(element as any[]).reduce((p, e)=>p + e[names[1]], '')}</>)\r\n    // }\r\n  \r\n    return (<DropdownButton id=\"dropdown-basic-button\" title={title}>\r\n        {data && data.map((d:any)=>(\r\n        <Dropdown.Item  onClick={(e:any) => onChecked(d)} >\r\n          <Form.Check \r\n              type=\"checkbox\" \r\n              label={d.label} \r\n              checked={d.checked} />\r\n        </Dropdown.Item>))\r\n        }\r\n      </DropdownButton>)\r\n  }\r\n\r\n  export default ConnectBase","import React from \"react\";\r\nimport gql from 'graphql-tag';\r\nimport FilteredList from \"../../../components/List/filtered-list\";\r\nimport ConnectBase from \"../../../components/List/connect-base\";\r\n\r\nconst USER_LIST_QUERY = gql`\r\n  query allUsers($filter: UserFilter){ allUsers(filter: $filter) {\r\n      id\r\n      name,\r\n      models\r\n    }}\r\n`;\r\n\r\nconst ADMIN_LIST_QUERY = gql`\r\n  query allUsers($filter: UserFilter){ allUsers(filter: $filter) {\r\n      id\r\n      email,\r\n      password,\r\n      roles {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_MUTATION = gql`\r\n  mutation deleteUser($id: ID!) {\r\n    deleteUser(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst USER_ROLE_QUERY = gql`\r\n  query allUserRoles{ allUserRoles {\r\n      id\r\n      name\r\n    }}\r\n`;\r\n\r\nconst ADD_MUTATION = gql`\r\n  mutation addToRoleOnUser($id1: ID!, $id2: ID!) { addTo_RoleOnUser(rolesUserRoleId:$id1, usersUserId:$id2) {\r\n    rolesUserRole {\r\n      id\r\n    } usersUser {\r\n      id\r\n    }\r\n  }}\r\n`;\r\n\r\nconst REMOVE_MUTATION = gql`\r\n  mutation removeFromRoleOnUser($id1: ID!, $id2: ID!) { removeFrom_RoleOnUser(rolesUserRoleId:$id1, usersUserId:$id2) {\r\n    rolesUserRole {\r\n      id\r\n    } usersUser {\r\n      id\r\n    }\r\n  }}\r\n`;\r\n\r\n\r\nconst ConnectRole: React.FC<{value:any, names?:any, item:any}> = ({value,names, item}) => {\r\n \r\n\r\n  const gql = {\r\n    QUERY: USER_ROLE_QUERY,\r\n    ADD: ADD_MUTATION,\r\n    REMOVE: REMOVE_MUTATION\r\n  }\r\n\r\n  return <ConnectBase value={value} names={names} gql={gql} item={item}/>\r\n}\r\n\r\nexport const UsersList: React.FC<{userId?: string, adminMode?: boolean}> = ({userId, adminMode=false}) => {\r\n    return (\r\n        <div>\r\n            <FilteredList \r\n                name={'Users'}\r\n                fields={['email','password', {name: 'roles.name', component: ConnectRole}, 'roles.id']}\r\n                userId={userId} \r\n                adminMode={adminMode}\r\n                queries={{USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersList","import React, { useState, useEffect } from \"react\";\r\nimport FilteredList from \"../../../components/List/filtered-list\";\r\nimport gql from 'graphql-tag';\r\n\r\nconst USER_LIST_QUERY = gql`\r\n  query allUsers($filter: UserFilter){ allUsers(filter: $filter) {\r\n      id\r\n      name,\r\n      models\r\n    }}\r\n`;\r\n\r\nconst ADMIN_LIST_QUERY = gql`\r\n  query allUserRoles($filter: UserRoleFilter) {\r\n  allUserRoles(filter: $filter) {\r\n      id,\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_MUTATION = gql`\r\n  mutation deleteUserRole($id: ID!) {\r\n    deleteUserRole(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const UserRoleList: React.FC<{userId?: string, adminMode?: boolean}> = ({userId, adminMode=false}) => {\r\n    return (\r\n        <div>\r\n            <FilteredList \r\n                name={'Roles'}\r\n                fields={['name']}\r\n                userId={userId} \r\n                adminMode={adminMode}\r\n                queries={{USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserRoleList","import React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\nimport { ApolloProvider } from '@apollo/client';\r\n\r\nimport Register from \"./containers/public/Login/Register\";\r\nimport Login from \"./containers/public/Login/Login\";\r\nimport ForgottenPassword from \"./containers/public/Login/ForgottenPassword\";\r\nimport ForgottenPasswordReset from \"./containers/public/Login/ForgottenPasswordReset\";\r\nimport VerifyUser from \"./containers/public/Login/VerifyUser\";\r\nimport { GithubCallback } from \"./containers/public/Login/utils/GithubCallback\";\r\n\r\nimport Home from \"./containers/public/Home/Home\";\r\nimport Header from \"./components/Header/Header\";\r\nimport UserDashboard from \"./containers/user/UserDashboard/UserDashboard\";\r\nimport ProtectRoute from \"./components/ProtectRoute/ProtectRoute\";\r\nimport UsersList from \"./containers/admin/Users/UsersList\";\r\nimport UserRolesList from \"./containers/admin/UserRoles/UserRolesList\";\r\n\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n        <Router>\r\n          <div>\r\n              <Header />\r\n            {/*\r\n              A <Switch> looks through all its children <Route>\r\n              elements and renders the first one whose path\r\n              matches the current URL. Use a <Switch> any time\r\n              you have multiple routes, but you want only one\r\n              of them to render at a time\r\n            */}\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route path=\"/login/facebook\" >\r\n                <GithubCallback type={'facebook'} />\r\n              </Route>\r\n              <Route path=\"/login/github\" >\r\n                <GithubCallback type={'github'} />\r\n              </Route>\r\n              <Route path=\"/login/google\" >\r\n                <GithubCallback type={'google'} />\r\n              </Route>\r\n              <Route path=\"/register\">\r\n                <Register />\r\n              </Route>\r\n\r\n              <Route path=\"/forgotten-password/:token\" component={ForgottenPasswordReset} />\r\n              <Route exact path=\"/forgotten-password\">\r\n                <ForgottenPassword />\r\n              </Route>\r\n              \r\n              \r\n              <Route path=\"/verify-user/:verifyToken\" component={VerifyUser} />\r\n              \r\n              <ProtectRoute path=\"/user/dashboard\">\r\n                <UserDashboard />\r\n              </ProtectRoute>\r\n              <Route path=\"/user/info\">\r\n                {/* <UserInfo /> */}\r\n              </Route>\r\n              \r\n              <ProtectRoute path=\"/admin/users\" role={'admin'}>\r\n                <UsersList adminMode={true}/>\r\n              </ProtectRoute>\r\n              <ProtectRoute path=\"/admin/roles\" role={'admin'}>\r\n                <UserRolesList adminMode={true}/>\r\n              </ProtectRoute>\r\n{/*              \r\n              <Route path=\"/user/roles/create\" component={UserRoleEdit} />\r\n              <Route path=\"/user/roles/:id\" component={UserRoleEdit} /> */}\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n  );\r\n}\r\n\r\n// You can think of these components as \"pages\"\r\n// in your app.\r\n\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h2>About</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios'\r\n\r\nexport const refreshToken = async () => {\r\n    const userId = localStorage.getItem('user.id')\r\n    const token = localStorage.getItem('user.token')\r\n    const refreshToken = localStorage.getItem('user.refreshToken')\r\n    return axios.post(`${process.env.REACT_APP_HOST}/graphql`, {\r\n        query: `\r\n            mutation refreshToken($userId: ID!, $token: String!, $refreshToken:String!){\r\n                refreshToken_v1(userId: $userId, token: $token, refreshToken:$refreshToken){\r\n                    token,\r\n                    refreshToken\r\n                }\r\n            }\r\n        `,\r\n        variables: {\r\n            userId,\r\n            token,\r\n            refreshToken\r\n        }\r\n    })\r\n}","import { ApolloClient, InMemoryCache , createHttpLink,  ApolloLink, fromPromise } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { onError } from '@apollo/client/link/error';\r\nimport { refreshToken } from './refreshToken';\r\nimport { RetryLink } from \"@apollo/client/link/retry\";\r\n\r\nconst retryLink = new RetryLink({\r\n  attempts: (count, operation, error) => {\r\n    return true;\r\n  },\r\n  delay: (count, operation, error) => {\r\n    return count * 1000 * Math.random();\r\n  },\r\n});\r\n\r\nlet isRefreshing = false;\r\nlet pendingRequests:any = [];\r\n\r\nconst resolvePendingRequests = () => {\r\n  //@ts-ignore\r\n  pendingRequests.map(callback => callback());\r\n  pendingRequests = [];\r\n}\r\n\r\n// https://able.bio/AnasT/apollo-graphql-async-access-token-refresh--470t1c8\r\nconst unautheniticatedAction = (forward:any, operation:any) => {\r\n  // error code is set to UNAUTHENTICATED\r\n  // when AuthenticationError thrown in resolver\r\n  let forward$;\r\n\r\n  if (!isRefreshing) {\r\n    isRefreshing = true;\r\n    forward$ = fromPromise(\r\n      refreshToken()\r\n        // @ts-ignore\r\n        .then(({data}) => {\r\n          const {data: {refreshToken_v1}} = data\r\n          localStorage.setItem('user.token', refreshToken_v1.token)\r\n          localStorage.setItem('user.refreshToken', refreshToken_v1.refreshToken)\r\n          \r\n          // Store the new tokens for your auth link\r\n          resolvePendingRequests();\r\n          const oldHeaders = operation.getContext().headers;\r\n          // modify the operation context with a new token\r\n          operation.setContext({\r\n            headers: {\r\n              ...oldHeaders,\r\n              authorization: `Bearer ${refreshToken_v1.token}`,\r\n            },\r\n          });\r\n          return forward(operation)\r\n        })\r\n        .catch(error => {\r\n          pendingRequests = [];\r\n          // Handle token refresh errors e.g clear stored tokens, redirect to login, ...\r\n          return;\r\n        })\r\n        .finally(() => {\r\n          isRefreshing = false;\r\n        })\r\n    ).filter(value => Boolean(value))\r\n    \r\n  } else {\r\n    // Will only emit once the Promise is resolved\r\n    forward$ = fromPromise(\r\n      new Promise(resolve => {\r\n        // @ts-ignore\r\n        pendingRequests.push(() => resolve());\r\n      })\r\n    );\r\n  }\r\n\r\n  // @ts-ignore\r\n  return forward$.flatMap(() => {\r\n    return forward(operation)\r\n  });\r\n}\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('user.token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    }\r\n  }\r\n});\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.REACT_APP_HOST\r\n  //uri: 'http://protectql.com/graphql',\r\n})\r\n\r\n// @ts-ignore\r\nconst erroLink = onError(({ graphQLErrors, networkError, operation, forward }) => {\r\n  if (graphQLErrors)\r\n    graphQLErrors.map(({ message, locations, path }) =>\r\n      console.log(\r\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\r\n      ),\r\n    );\r\n\r\n    if(graphQLErrors && graphQLErrors?.length > 0 && graphQLErrors[0].message == 'Unauthorized') {\r\n      // @ts-ignore\r\n      return unautheniticatedAction(forward, operation)\r\n    }\r\n\r\n  if (networkError) console.log(`[Network error]: ${networkError}`);\r\n});\r\n\r\nexport const apolloClient = new ApolloClient({\r\n  link: ApolloLink.from([retryLink, erroLink, authLink, httpLink]),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      errorPolicy: 'none'\r\n    },\r\n    query: {\r\n      errorPolicy: 'none'\r\n    },\r\n    mutate: {\r\n      errorPolicy: 'all'\r\n    }\r\n  }\r\n});\r\n\r\n\r\nexport default apolloClient","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloProvider } from '@apollo/client';\nimport apolloClient from './app/apolloClient';\nimport { UserProvider } from './app/userContext';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={apolloClient} >\n        <UserProvider >\n          <App />\n        </UserProvider>\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}